import{i as Xe,p as k,g as Z,d as h,e as de,f as Lt,h as ht,j as En,k as Rn,l as $n,a as d,F as ie,u as z,m as $,n as Y,q as J,s as L,t as ee,v as Ye,x as T,y as E,z as Pe,A as Ie,B as Ue,C as Ve,D as Be,E as Q,G as Mn,H as we,I as Pt,J as Fn,K as It,L as fe,M as qn,N as re,O as zn,P as F,Q as U,R as H,S as Kn,T as Wn,U as On,W as Te,X as Vt,Y as jn,Z as Xn,_ as ke,$ as gt,a0 as Gn,a1 as Ee,a2 as Hn,a3 as mt,a4 as Ae,a5 as Yn,a6 as ft,a7 as xe,a8 as Se,a9 as he,aa as Je,ab as Ce,ac as Un,ad as Qe,ae as Bt,af as Et,ag as Re,ah as Ze,ai as le,aj as Jn,ak as Qn,al as Zn,am as pt,an as ea,ao as ta,ap as na,aq as aa,o as De,ar as vt,w as q,as as G,at as yt,au as ia,c as Rt,av as la,aw as sa,ax as oa}from"./index-DNgu8SRL.js";const ra=["top","bottom"],ua=["start","end","left","right"];function da(e,a){let[n,t]=e.split(" ");return t||(t=Xe(ra,n)?"start":Xe(ua,n)?"top":"center"),{side:bt(n,a),align:bt(t,a)}}function bt(e,a){return e==="start"?a?"right":"left":e==="end"?a?"left":"right":e}class qe{constructor(a){let{x:n,y:t,width:i,height:l}=a;this.x=n,this.y=t,this.width=i,this.height=l}get top(){return this.y}get bottom(){return this.y+this.height}get left(){return this.x}get right(){return this.x+this.width}}function ca(e){const a=e.getBoundingClientRect(),n=getComputedStyle(e),t=n.transform;if(t){let i,l,s,o,c;if(t.startsWith("matrix3d("))i=t.slice(9,-1).split(/, /),l=+i[0],s=+i[5],o=+i[12],c=+i[13];else if(t.startsWith("matrix("))i=t.slice(7,-1).split(/, /),l=+i[0],s=+i[3],o=+i[4],c=+i[5];else return new qe(a);const g=n.transformOrigin,v=a.x-o-(1-l)*parseFloat(g),f=a.y-c-(1-s)*parseFloat(g.slice(g.indexOf(" ")+1)),u=l?a.width/l:e.offsetWidth+1,r=s?a.height/s:e.offsetHeight+1;return new qe({x:v,y:f,width:u,height:r})}else return new qe(a)}function ha(e,a,n){if(typeof e.animate>"u")return{finished:Promise.resolve()};let t;try{t=e.animate(a,n)}catch{return{finished:Promise.resolve()}}return typeof t.finished>"u"&&(t.finished=new Promise(i=>{t.onfinish=()=>{i(t)}})),t}const ga="cubic-bezier(0.4, 0, 0.2, 1)",ma="/caterdokupillar-help/assets/caterdokupillar-BpIa97DU.svg",ze=[{title:"Face of Eternity",author:"theasylm",rules:`Normal 6x6 Sudoku rules apply. Place the digits 1-6 exactly once in every row, column, and 2x3 box.

Normal Japanese Sums rules apply. Colors used in this puzzle are Green, Red, Black, Yellow. For best results, remove all unshaded marking you have done once completed.

Japanese Sums rules: The squares outside the grid indicate the order of the runs of contiguous cells that must be shaded the color of the clue. The number in the square indicates the sum of the cells in the run. There must be at least one unshaded cell between runs of the same color, but that is not required for runs of different colors. All shaded runs are given. 
`,digits:"5623"},{title:"Aperitif",author:"Tallcat",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order. `,digits:"4513"},{title:"Wheels",author:"Alaric Taqi A. (Crusader175)",rules:`Normal 6x6 Sudoku rules apply.

Wheels: Digits in a grey circle have to be placed in the same circular order in the four cells that are touched by the circle. The circles might have to be rotated to the correct position by 90°, 180°, or 270°. Digits are allowed to repeat on wheels as normally allowed by other rules. 
`,digits:"3462"},{title:"Arrow Sudoku",author:"Agent",rules:`Normal 6x6 Sudoku rules apply.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules. `,digits:"2153"},{title:"Metamorphosnipe",author:"Philip Newman",rules:`Select exactly 6 digits from 1-9 and place them exactly once in every row, column and 2x3 box.

Multiplicative Arrow: The product of the digits along an arrow is equal to the number in its connected circle or pill. Digits in pills are two digit numbers read left to right or top to bottom. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"1432"},{title:"Moon-Sun Caterdokupillar ",author:"Math Pesto",rules:`Normal 6x6 Sudoku rules apply.

Draw a non-branching, non-intersecting loop that visits each box exactly once. Within each box, the loop either passes through all moons and no suns, or all suns and no moons. The loop cannot pass through the same type of clue in two consecutively used regions. 

The loop acts as a German Whispers line: Adjacent digits along the green lines must have a difference of at least 3.`,digits:"5346"},{title:"Double or Nothin'",author:"Kennet's Dad",rules:`Normal 6x6 Sudoku rules apply. 

Garden Path Lines: Blue lines are split into segments by box borders. For each line, the sum of one segment will be double the sum of the other segment.`,digits:"4615"},{title:"Caterdokupillar X-Cages",author:"kuraban",rules:`Normal 6x6 Sudoku rules apply.

BYO Killer: Draw killer cages into the grid so that each cage contains exactly one clued cell and cages don't overlap. The clued cell must end up as the left-most cell of the top row of the cage and the digit in the circle indicates the amount of cells that the cage it's in contains. Digits in killer cages cannot repeat and sum to the value in the top left of the clued cell. `,digits:"1536"},{title:"Signal Processing",author:"FullDeck and Missing a Few Cards",rules:`Normal 6x6 Sudoku rules apply.

Palindromes: The digits on a grey line read the same forwards and backwards.

Quadruples: Digits in the circles must all appear at least once in the cells touching them.`,digits:"3156"},{title:"Renban Sudoku",author:"the_cogito",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.

The circles in the top left are for the next puzzle, ignore them for now.`,digits:"1425"},{title:"Sandwich Sudoku",author:"clover!",rules:`Normal 6x6 Sudoku rules apply.

Sandwich Sums: Circled digits outside this 6x6 grid indicate the sum of the digits that are placed in-between the 1 and 6 in that row or column. This includes circled digits in the previous grid. `,digits:"5361"},{title:"Cave Sudoku",author:"Piatato",rules:`Normal 6x6 Sudoku rules apply.

Cave: Shade some cells to form a cave, in such a way that all unshaded cells are orthogonally connected and all shaded cells are orthogonally connected by other shaded cells to an edge of the grid. Cells that contain a star must be unshaded, and a digit placed in such a cell indicates the total number of cells seen in all four orthogonal directions, including itself, where shaded cells obstruct vision.`,digits:"2415"},{title:"The Sky's the Limit",author:"JMoat13",rules:`Normal 6x6 Sudoku rules apply.

Counting Circles: A digit in a circle indicates exactly how many circles contain that digit.
Digits in circles outside of the grid are Skyscraper clues.

Skyscrapers: Digits in the grid represent skyscrapers, with their values corresponding to their heights. Taller skyscrapers obscure all shorter skyscrapers behind them. Clues outside the grid indicate the number of skyscrapers seen in that row/column, from the line of sight of the clue. `,digits:"4163"},{title:"Every Cage a Unique Fibonacci",author:"TwoHoleStraw",rules:`Normal 6x6 Sudoku rules apply.

Fibonacci Cages: Digits in cages cannot repeat and sum to a Fibonacci number (1, 2, 3, 5, 8, 13, 21). Each cage must sum to a different value.`,digits:"6524"},{title:"Sum or Product",author:"James Sinclair",rules:`Normal 6x6 Sudoku rules apply.

Sum or Product Cages: Digits in cages cannot repeat and either sum or multiply to the value in the top left (or possibly both).

This rule does not apply to the cage in r6c2 from the previous puzzle.`,digits:"2463"},{title:"Blueberry Crunch",author:"Tyrgannus",rules:`Normal 6x6 Sudoku rules apply.

Prime-Composite Dots: Digits separated by either shape must sum to 7 or less.
Digits separated by a circle sum to a prime number.
Digits separated by a square sum to a composite (non-prime) number.`,digits:"1364"},{title:"Grammar Nazi",author:"Chameleon",rules:`Normal 6x6 Sudoku rules apply.

Kropki Count Cages: A digit next to a white dot in the top left of a cage indicates exactly how many white Kropki dots can be placed in the cage, and a digit next to a black dot in the top left of a cage indicates exactly how many black Kropki dots can be placed in the cage, if given.
Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio.
In this puzzle a 1 adjacent to a 2 counts as both a black and a white dot.
Digits are allowed to repeat in cages as normally allowed by other rules.

For instance, a '2⬤ 0◯' clue will indicate that there are exactly 2 black dots and 0 white dots in the cage, and a '1◯' clue will indicate that there's 1 white dot and any amount of black dots.`,digits:"5126"},{title:"Counting Spring Rolls",author:"Gene",rules:`Normal 6x6 Sudoku rules apply.

Counting Circles: A digit in a circle indicates exactly how many circles contain that digit.
Digits in circles outside of the grid are Spring Roll clues.

Spring Rolls: Within the first four cells from the direction of the clue, find the highest and the lowest digit. The clue outside the grid indicates the sum of the digits that are placed in-between those two cells.`,digits:"1342"},{title:"Hint of Providence",author:"Mormagli ",rules:`Normal 6x6 Sudoku rules apply.

Entropic Lines:  Any three adjacent digits along a peach entropic line are from one each of low(1,2), medium(3,4), and high(5,6) digits. 

German Whispers Lines: Adjacent digits along the green line must have a difference of at least 3. `,digits:"6524"},{title:"Double-Booked",author:"XeonRisq",rules:`Normal 6x6 Sudoku rules apply.

Remote sums: A digit N in a cage points at one of the digits X, that is N cells away vertically or horizontally. The number given in the cage is the sum of N+X.`,digits:"1632"},{title:"Arrow Sudoku",author:"Swaroop Guggilam",rules:`Normal 6x6 Sudoku rules apply.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"2543"},{title:"Linesweeper Sudoku",author:"Phistomefel",rules:`Normal 6x6 Sudoku rules apply.

Line Sweepers: Draw a loop into the grid that only moves orthogonally and doesn't branch or intersect itself. Loop sections may touch each other orthogonally and diagonally.
A digit in a circle indicates how many of the cells in the surrounding 3x3 area centered on the circle are visited, including the circled cell.`,digits:"6351"},{title:"Narcisse",author:"Christounet",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages: Digits in cages cannot repeat and the values of all cells in the cage sum to the number in the top left.

Mirrored digits: There are 6 mirrored digits hidden in the grid, exactly one in every row, column, and box. Every digit appears in a mirrored cell exactly once. For the purpose of killer cages, a digit X in a mirrored cell will have a value of 7-X. For example, the digit 1 would have a value of 6, and vice versa. `,digits:"2546"},{title:"Region Sum Lines Sudoku",author:"Florian Wortmann",rules:`Normal 6x6 Sudoku rules apply.

Region Sum Lines: Blue lines are split into segments by box borders. Within each individual line, the sum of the digits on each segment is the same.`,digits:"3152"},{title:"Tapa Sudoku",author:"DiMono",rules:`Normal 6x6 Sudoku rules apply.

Tapa: Shade some cells so that all shaded cells form one orthogonally connected area and no 2x2 is entirely shaded. 
Red cells cannot be shaded and contain a digit indicating the length of the connected group of shaded cells in its up to 8 surrounding cells.
If adjacent cells are either both shaded or both unshaded they may not contain consecutive digits.

Shaded sums: Clues outside the grid indicate the sum of digits in shaded cells in its row or column.`,digits:"6524"},{title:"Little Killer-X Sums-Kropki Pairs Sudoku ",author:"Akash Doulani ",rules:`Normal 6x6 Sudoku rules apply.

Little Killer: Numbers outside the grid are the sum of the digits pointed to along the indicated diagonal. Digits are allowed to repeat along those diagonals as normally allowed by the other rules.

X-Sums: Digits outside the grid indicate the sum of the first X digits, where X is the digit in the closest cell to the clue.

Duality: All clues are both Little Killer and X-Sums. 

Kropki Dots: Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.`,digits:"4312"},{title:"Entropic Whisper Sudoku",author:"thoughtbyte",rules:`Normal 6x6 Sudoku rules apply.

Entropic Lines: Any three adjacent digits along a peach entropic line are from one each of low(1,2), medium(3,4), and high(5,6) digits. 

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3.`,digits:"2456"},{title:"Chain of Command",author:"MathGuy_12",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.

N-Chains: An N-Chain is a set of N cells in a row or column that index each other in a path to form a closed loop. A pair of colored cages in a row or column indicates that there is an N-Chain of the given length that stays between the cages and includes both cages. For example,  4 in r1c1, 6 in r1c4, and 1 r1c6 form a 3 long N-chain in row 1. Blue cages show N-Chains in rows, and red cages show N-Chains in columns. Not all N-Chains are necessarily given.`,digits:"4631"},{title:"Spinners",author:"dorlir",rules:`Normal 6x6 Sudoku rules apply.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. If two arrows are attached to the same circle, they each independently sum to the value in the circle. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"2365"},{title:"Nice Dice",author:"Angelo",rules:`Normal 6x6 Sudoku rules apply.

Dice Templates: The colored regions in the grid are dice templates, meaning that if they were folded into a cube, you would have one of each of the digits 1-6 and each pair of opposite sides would sum to 7.`,digits:"5614"},{title:"Waiting in the Wings",author:"BremSter",rules:`Normal 6x6 Sudoku rules apply.

Diagonal Outside: Orange digits outside the grid must be located within the first three cells seen in the direction pointed to by the arrow.`,digits:"4132"},{title:"Thread Tap&Die SET",author:"Clocksmith",rules:`Normal 6x6 Sudoku rules apply.

Palindromes: The digits on a grey line read the same forwards and backwards.`,digits:"2654"},{title:"All things equal",author:"Sktx",rules:`Normal 6x6 Sudoku rules apply.

Equalines: Digits along each gold line always sum to the same number, which has to be determined by the solver. `,digits:"6231"},{title:"Reflex",author:"Jobo",rules:`Normal 6x6 Sudoku rules apply. 

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"5614"},{title:"Equal Sums",author:"Chris Napolitano",rules:`Normal 6x6 Sudoku rules apply.

Equalines: Digits along each gold line always sum to the same number, which has to be determined by the solver. `,digits:"2165"},{title:"Sum Caterpillar Trails",author:"Rangsk",rules:`Normal 6x6 Sudoku rules apply.

Region Sum Lines: Blue lines are split into segments by box borders. Within each individual line, the sum of the digits on each segment is the same. The sum of segments on different lines may or may not be equal.`,digits:"6524"},{title:"Positive Chess Thingy",author:"Korshben",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages: Digits in cages cannot repeat and sum to the value in the top left.

Chess Views: Cells marked 'Bx' must see exactly x cells that match their value a chess Bishop's move away. Cells marked 'Knx' must see exactly x cells that match their value a chess Knight's move away. Cells marked 'Kix' must see exactly x cells that match their value a chess King's move away.`,digits:"3412"},{title:"My Phone Number",author:"Lake",rules:`Normal 6x6 Sudoku rules apply.

Look-and-Say cages: The number in the top left of the cage is split up into pairs. Each pair should be read as 'there are X Ys in the cage'. So for this puzzle, the cage contains one 5, three 2s, etc. The '?' can represent any digit. `,digits:"6521"},{title:"Directional Renban",author:"Chad",rules:`Normal 6x6 Sudoku rules apply.

Renban Snakes: A cell containing an arrow is the start of a snake travelling in the indicated direction. The length of the snake is equal to the digit in the arrow's cell (snakes may be 1 cell long). A snake is a one-cell wide path of orthogonally connected cells that doesn't branch. Snakes may not overlap themselves or other snakes.
Each snake acts as a renban line, with digits on it forming a set of non-repeating, consecutive digits in any order.`,digits:"1453"},{title:"Puzzle title",author:"Logan Wall",rules:`Normal 6x6 Sudoku rules apply.

Entropic Lines: Any three adjacent digits along an entropic line are from one each of low(1,2), medium(3,4), and high(5,6) digits. 

Bulbless Thermometers: Digits must strictly increase starting from one end of the line.

Entropic-Thermo-Ambiguity: Each line can be either a bulbless thermometer or an entropic line. The solver must deduce which lines are bulbless thermometers and which are entropic lines.`,digits:"3126"},{title:"Cat or Pillar",author:"Michael Lefkowitz",rules:`Normal 6x6 Sudoku rules apply.

Cat Pillars: The sum of the digits on each pillar is divisible by the digit on the cat standing on top of it. Every cat has a different digit.`,digits:"1452"},{title:"Cater-pea-lar",author:"SamuPiano",rules:`Normal 6x6 Sudoku rules apply.

Split Pea Lines: The sum of the digits along each line connecting two circles (the sum does not include the circles) is equal to a two digit number represented by the concatenation of the digits in the circles, in either order. For example, if the circles are 1 and 3 then the line connecting them sums to either 13 or 31 and a valid set of digits along the line would be 346 as 3+4+6=13.
`,digits:"4163"},{title:"Nothing Loop",author:"blackjackfitz",rules:`Normal 6x6 Sudoku rules apply. 

Kropki Dots:  Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.

Extra Region: Within cells with circles, each digit must appear exactly once. 

Nothing Loop: Draw a 1-cell wide loop that moves orthogonally between the centers of some cells. The loop may touch itself orthogonally and diagonally. 

Box borders divide the loop into segments.

A digit in a circle is on the loop and gives the length of its segment.

A digit in a square indicates the number of non-loop cells in the (up to 9) surrounding cells, including itself. 
`,digits:"3254"},{title:"Hangry",author:"Nebuzaradan",rules:`Select exactly 6 digits from 1-9 and place them exactly once in every row, column and 2x3 box.

X-Sums: Digits outside the grid indicate the sum of the first X digits, where X is the digit in the closest cell to the clue.
'a' represents the same number in the whole puzzle, with '2a' being double that number.

For the 4 digits given to the next grid, treat any digits higher than 6 as the digits missing in the range of 1-6 in numerical order. For example, if the six digits used in the puzzle are 135679, the 7 will be treated as a 2, then the 9 will be treated as a 4 in the next grid.`,digits:"3546"},{title:"Counting Lines",author:"Nurator",rules:`Normal 6x6 Sudoku rules apply. 

Counting lines: A digit on a line indicates exactly how many cells on that line contain that digit. 
`,digits:"2461"},{title:"Lines of Descent",author:"BenceJoful",rules:`Normal 6x6 Sudoku rules apply.

Descent Arrows: For each cell that contains an arrow, move N times in the direction of the arrow to arrive at a cell with value N-1, where N is the value of the digit in the cell with the arrow.`,digits:"5316"},{title:"I'm so hungry, I could eat...",author:"Pallando",rules:`Normal 6x6 Sudoku rules apply.

Parity Sweeper: A digit in a circle indicates how many of the cells in the surrounding 3x3 area centered on the circle have the same parity as the circled digit, including the digit in the circle itself. 

Kropki Dots: Digits separated by a black dot have a 1:2 ratio. Not all these dots are necessarily given.

Diagonal Kropki Dots: Digits separated diagonally by a black dot at a corner have a 1:2 ratio. For example, if row 2 column 3 was a 4 then row 3 column 4 would be a 2. Not all these dots are necessarily given.`,digits:"6425"},{title:"Arrow Sum Pointers",author:"Mr.Menace",rules:`Normal 6x6 Sudoku rules apply.

Pointing Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. Additionally, the digit in the circle must appear at least once in the direction pointed at by its arrow, not including the arrow's tip as a valid option. `,digits:"4312"},{title:"Mystery Square Cages",author:"ICHTUES",rules:`Normal 6x6 Sudoku rules apply.

Mystery square cages: The digits in each cage sum to a square number (a number that is the result of multiplying an integer number by itself), but no two cages sum to the same square number. Digits in a cage MAY repeat if allowed by other rules.`,digits:"4312"},{title:"Twelve Spots",author:"Marty Sears",rules:`Normal 6x6 Sudoku rules apply.

BYO Lines: Draw 6 lines, each with a different turquoise spot at both ends. Lines must visit at least 3 cells including their starting and ending cells. Lines may move orthogonally or diagonally. Lines may not branch, cross each other, share cells, or pass directly through 'no entry' signs.

Same Difference Lines: Each line is a 'same difference' line. Every pair of adjacent cells along a line has the same difference - this is its 'difference value.' Each line has a different 'difference value'.`,digits:"2146"},{title:"tortie",author:"jneen",rules:`Normal 6x6 Sudoku rules apply.

* Digits may not repeat in cages.
* Dots between cells indicate the difference in value between adjacent cells.
* Dots with >1 indicate that the adjacent cells are non-consecutive.
* The inequality sign (>) indicates the order of the adjacent cells.`,digits:"2416"},{title:"Squirmeeeeeee",author:"glum_hippo",rules:`Normal 6x6 Sudoku rules apply.

High low lines: Along dark green lines, adjacent digits must alternate between high (4-6) and low (1-3).

Skyscrapers: Digits in the grid represent skyscrapers, with their values corresponding to their heights. Taller skyscrapers obscure all shorter skyscrapers behind them. The 3 above column 3 as well as digits along lines outside the grid indicate the number of skyscrapers seen in that row/column, from the line of sight of the clue. These digits outside the grid are still restricted to values between 1-6.`,digits:"5361"},{title:"Curled Up",author:"RSP",rules:`Normal 6x6 Sudoku rules apply.

Wrap-around Sequence Lines: Grey lines in the grid are sequence lines. Along each sequence line is a sequence of digits in order with a constant difference, such as 1234 or 642. This constant difference can be negative but does not change sign, so 242 is not a valid sequence line. The constant difference may be 0, so 444 is a valid sequence line. Each line may have a unique constant difference. 

However, the digits are counted under mod 6, meaning a 7 in sequence is replaced by a 1 instead, and an 8 by a 2 and so on, it wraps around. This makes the sequence 4-5-6-1-2 possible, for example. `,digits:"1234"},{title:"Battlefield sudoku",author:"Ambrose",rules:`Normal 6x6 Sudoku rules apply.

Battlefield: Consider the first X and last Y cells of a row or column, where X is the value of the first and Y the value of the last cell. Clues outside the grid give the sum of the digits where these groups overlap, or the sum of the digits strictly between these groups when they do not overlap.`,digits:"4625"},{title:"Green and Bear It",author:"Lumos",rules:`Normal 6x6 Sudoku rules apply.

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3.`,digits:"6312"},{title:"Arrow Sudoku",author:"Mitchell Lee",rules:`Normal 6x6 Sudoku rules apply.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow.  Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"4251"},{title:"Elephant",author:"Xenonetix",rules:`Normal 6x6 Sudoku rules apply.

Region Sum Lines: The blue line are split into segments by box borders. Within each individual line, the sum of the values on each segment is the same.

Yin Yang:  Shade some cells such that all shaded cells belong to a single orthogonally connected area and all unshaded cells also belong to a single orthogonally connected area. Additionally, No 2x2 area is entirely shaded or unshaded. Unshaded cells are doubled for the purposes of the region sum line.`,digits:"5142"},{title:"Instructions from the Outside",author:"Strosahl",rules:`Normal 6x6 Sudoku rules apply.

Descriptive Clues: Words outside the grid indicate the digits in the two closest cells in the indicated row/column belong to the following sets of digits. Big (456), Small (123), Even (246), Odd (135), and Prime (235).`,digits:"6123"},{title:"Outside the Box",author:"angel shaaark",rules:`Normal 6x6 Sudoku rules apply. 

X-Sums (?): Clues outside the grid, or any value placed outside the grid, indicate the sum of the first X values seen, where X is the first seen value. These X-Sums (?) clues can see either to the left or downwards.`,digits:"3415"},{title:"Lepidoptera",author:"ThePedallingPianist",rules:`Normal 6x6 Sudoku rules apply.

Full Rank Arrows: If the six numbers formed by reading the 2 digits on an arrow in the direction of the arrow were listed in size order, the digit in the arrow's circle represents its ranking within the list from lowest (1) to highest (6). There are no tied ranks. That is, the circled digits contain no repeats and the 2-digit numbers contain no repeats.`,digits:"4263"},{title:"Whirlpool",author:"Darth Paradox",rules:`Normal 6x6 Sudoku rules apply.

Average Arrows: A digit in a circle is equal to the average of the digits on the attached arrow.  Each circle has exactly one attached arrow; the other arrow that intersects each circle travels straight through it without turning and arrows have been colored/varied in thickness for clarification on this front. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"5431"},{title:"Nameless sudoku",author:"Dexter Bartholemeow",rules:`Normal 6x6 Sudoku rules apply.

Roller Coaster: Draw a non-intersecting loop that travels orthogonally between the centers of some cells in the grid. Clues to the left of rows indicate the sum of digits on horizontal segments of the loop in that row, in the correct order. Clues above columns indicate the sum of digits on vertical segments of the loop in that column, in the correct order. A '?' may replace any value from 0-9, but no clue may have a leading zero.`,digits:"4623"},{title:"If at first you don't succeed",author:"Memeristor",rules:`Normal 6x6 sudoku rules apply.

BYO Repetition Sum Lines: Draw lines in the grid that pass through the values between cells. These values indicate the sum of the digits along the line. Lines do not branch, nor do they intersect with themselves or other lines. Each digit on a line must appear at least twice on it. The digit may repeat as many times as allowed by other rules.`,digits:"1326"},{title:"random puzzle goes brrr",author:"playmaker6174",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages:  Digits in cages cannot repeat and sum to the value in the top left.`,digits:"6251"},{title:"Arctic Moth",author:"Kinnison",rules:`Normal 6x6 Sudoku rules apply.

Slow Thermometers: Digits must not decrease along the thermometer starting from the bulb end. `,digits:"2413"},{title:"ルックエア に して くれ (Make it Look-Air)",author:"AkashG23",rules:`Normal 6x6 Sudoku rules apply.

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3.

Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.

Look-Air:  Shade some cells such that all connected regions of shaded cells form squares. Two squares of the same size may not have a direct view of one another (i.e. have a straight line of unshaded cells in between them) but may be in the same row or column if obstructed by other shaded cells. 
The digit in a hexagon represents the number of shaded cells in the plus shape that is created by the cell itself and it's 4 orthogonal neighbors. `,digits:"5632"},{title:"Not My Vault",author:"kinoseidon",rules:`Normal 6x6 Sudoku rules apply.

Vaults: Digits in a cage may not appear in any cell orthogonally adjacent to the cage. Digits MAY repeat within a cage.

Look-and-Say: The digits xy in the top left of a cage counts the digit y appearing x times. The clue either refers to digits within the cage or digits orthogonally adjacent to the cage.
For example, a clue of '24' means that there are either exactly two 4's in the cage, or exactly two 4's orthogonally adjacent to the cage. `,digits:"6341"},{title:"Weird, Bad, Spots",author:"rockratzero",rules:`Normal 6x6 Sudoku rules apply.

Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.

Little Killer: Numbers outside the grid are the sum of the digits pointed to along the indicated diagonal, WITHIN this 6x6. Digits are allowed to repeat along those diagonals as normally allowed by the other rules.
The values of the clues abide by the Kropki Dots rules and must be deduced by the solver. `,digits:"3512"},{title:"Irrswich PLAS",author:"The Book Wyrm",rules:`Normal 6x6 Sudoku rules apply.

Psycho Look-and-Say Killers: Each digit in a pink cage indexes a cell in the grid. The cell is located in the box with the digit's number, in the same position within the box as the cell containing the digit (counting boxes from left to right and top to bottom). A digit may index its own cell. The cage clue should be read as a look-and-say clue that counts the number of times a digit appears in all the indexed cells.

Irrwisch: Each time the letter A appears, it represent a different value from 1-6.`,digits:"2461"},{title:"Nurikabe Hybrid",author:"MaizeGator",rules:`Normal 6x6 Sudoku rules apply.

Nurikabe: Shade some cells blue, representing water, such that all water is orthogonally connected, but no 2x2 area is fully covered. Shade all other cells green, forming groups of orthogonally connected cells called islands.

Each island contains exactly one cage clue, and the digit in the cage indicates the size of its island. The number in the top left of a cage gives the sum of all cells on the island. The solver must deduce the shape of the islands. Digits cannot repeat within islands.`,digits:"2635"},{title:"Caterkiller",author:"Malrog",rules:`Normal 6x6 Sudoku rules apply.

Killer Lines: Along the line, digits are grouped in sections, each containing exactly one small digit clue. The digits in a section cannot repeat, and must sum to the value of the clue.`,digits:"3524"},{title:"7 Dots",author:"I Love Sleeping",rules:`Normal 6x6 Sudoku rules apply.

Parity Lines: Digits along a red parity line alternate between even and odd.

7 Dots: A digit N in a cell with a dot sums to 7 with one or more digits in the direction of the dot, starting with the Nth digit in that direction. `,digits:"6154"},{title:"Raupe Nimmersatt",author:"Palfly Kampling",rules:`Normal 6x6 Sudoku rules apply.

Remote sums: A digit N in a cage points at one of the digits Y, that is N cells away vertically or horizontally. The number given in the cage is the sum of N+Y.
In this puzzle remote sums can point exactly one cell outside the grid, making that cell an X-Sums clue.

X-Sums: Digits outside the grid indicate the sum of the first X digits, where X is the digit in the closest cell to the clue.`,digits:"1325"},{title:"Double Arrow Sudoku",author:"Jakhob and wooferzfg",rules:`Normal 6x6 Sudoku rules apply.

Double Arrows: The sum of the digits in two circles is equal to the sum of the digits on the line connecting them. Digits are allowed to repeat in the circles and on the lines as normally allowed by other rules.`,digits:"5164"},{title:"Kropkiller Sudoku",author:"Barbitos",rules:`Normal 6x6 Sudoku rules apply.

Kropki Cages: The value of a cage is the sum of the digits in it.
Cage values separated by a white dot are consecutive. 
Cages values separated by a black dot have a 1:2 ratio.
All possible dots between cages are given.`,digits:"2543"},{title:"Staircase",author:"isamook",rules:`Normal 6x6 Sudoku rules apply.

Quadruples: Digits in the circles must all appear at least once in the cells touching them.`,digits:"3261"},{title:"Slitherlink Sudoku",author:"Gliperal",rules:`Normal 6x6 Sudoku rules apply.

Slitherlink: Draw a closed loop along the grid edges that does not branch or touch itself. Cells containing the digits 1-3 indicate the amount of edges of the cell that are used by the loop. A 4 indicates that none of the edges of the cell are used by the loop, and 5 and 6 are ignored for the purpose of Slitherlink.
However, if there is a clue in the top left of the cell, the digit inside the cell is ignored and the top left clue is used instead. A ? can represent any clue from 0-3.`,digits:"6215"},{title:"Finders Sweepers",author:"fjam",rules:`Normal 6x6 Sudoku rules apply.

Parity Lines: Digits along a parity line alternate between even and odd.

Longest Line Sweepers: A digit in a circle indicates the length of the longest orthogonally connected parity line that can be drawn in the up to 8 surrounding cells (within this 6x6 grid). The length of a line is the number of line segments required to draw it. Therefore, a line entering N cells around a circle has length N-1. For example, a line connecting three cells, drawn with two line segments, has length 2.`,digits:"1462"},{title:"Region Sum lines Consecutive Pairs",author:"Ashish Kumar",rules:`Normal 6x6 Sudoku rules apply.

Region Sum Lines: Blue lines are split into segments by box borders. Within each individual line, the sum of the digits on each segment is the same. The sum of segments on different lines may or may not be equal.

Kropki Dots: Digits separated by a white dot are consecutive. Not all dots are necessarily given.`,digits:"1326"},{title:"A single between line",author:"superrabbit",rules:`Normal 6x6 Sudoku rules apply.

Between Lines: The digits on a between line must be strictly in-between the digits filled in the circles, excluding the digits in the circles.`,digits:"3465"},{title:"Caterpiller Split Sum Loop",author:"Virtual",rules:`Normal 6x6 Sudoku rules apply.

Remote sums loop: Draw a loop through the grid that visits each cage and does not touch itself orthogonally, but may touch diagonally. A digit N in a cage points at one of the digits X, that is N cells away along the loop in either direction. The number given in the cage is the sum of N+X.`,digits:"5621"},{title:"Hexed",author:"No-Feet McGee",rules:`Normal 6x6 Sudoku rules apply.

5-Difference German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 5.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.

Region Sum Lines: Blue lines are split into segments by box borders. Within each individual line, the sum of the digits on each segment is the same. The sum of segments on different lines may or may not be equal.

Palindromes: The digits on a grey line read the same forwards and backwards. `,digits:"6534"},{title:"Junction Depot",author:"Riffclown",rules:`Irregular 6x6 Sudoku rules apply. Place the digits 1-6 exactly once in every row, column, and bold-outlined region.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"2641"},{title:"For Memeristor's Insect Puzzle",author:"WISTY 'WORD SEACH' FALL",rules:`Normal 6x6 Sudoku rules apply.

Double Indexers: The digit in a shaded cell indicates both the column in which the cell's column number appears in its row and the row in which its row number appears in its column. (i.e. if r4c6 were a 3, there would be a 6 in r4c3 and a 4 in r3c6.)`,digits:"6215"},{title:"Detour",author:"grkles",rules:`Normal 6x6 Sudoku rules apply.

Little Killer: Numbers outside the grid are the sum of the digits pointed to along the indicated diagonal, WITHIN this 6x6 grid. Digits are allowed to repeat along those diagonals as normally allowed by the other rules. `,digits:"4526"},{title:"Quadlibet",author:"Raumplaner",rules:`Normal 6x6 Sudoku rules apply.

Quad sums: A circle at a corner means that one of the four surrounding digits is the sum of the remaining three digits of the corner. Not all dots are necessarily given.

Kropki: Digits separated by a white dot are consecutive. Not all dots are necessarily given.`,digits:"5631"},{title:"Shyscrapers",author:"Lisztes",rules:`Normal 6x6 Sudoku rules apply.

Internal Skyscrapers: Digits in the grid represent skyscrapers, with their values corresponding to their heights. Taller skyscrapers obscure all shorter skyscrapers behind them. Clues indicate the number of skyscrapers that can be seen in that row/column, from the line of sight of the clue.

HOWEVER: the clues are inside of the grid, in the cages as one-digit numbers in pairs. Horizontal cages contain the clues of the given row (the digit on the left is the left side's outside clue, the digit on the right is the right side's outside clue), vertical cages contain the clues of the given column (the top digit is the clue from above the puzzle, the bottom digit is the clue from underneath the puzzle).`,digits:"1243"},{title:"numbered clues",author:"Andrewsarchus",rules:`Normal 6x6 Sudoku rules apply.

XV Sums: Digits separated by a V must sum to 5, and digits separated by an X must sum to 10.  Not all X's and V's are necessarily given.

Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.

Even/Odd: Cells containing a grey square are even. Cells containing a grey circle are odd.

Numbered Clues: An X,V, or Kropki dot outside of the grid is placed on the edge of the Nth and (N+1)th cells from the clue, where N is the digit closest to the clue.

An Even/Odd clue outside of the grid is placed in the Nth cell from the clue where N is the digit closest to the clue.`,digits:"3456"},{title:"X-Sums Killer Sudoku",author:"KNT",rules:`Normal 6x6 Sudoku rules apply.

X-Sum Cages: Within cages, digits cannot repeat, including the individual digits placed outside the grid in the cages. For example, if you placed a 12 in an outside clue, you cannot repeat the 1 or 2 in the cage. Digits placed outside the grid in cages become an X-Sum clue. This means the digits outside the grid must be equal to the sum of the first X digits, seen from the direction of clue, where X is the first digit in that row or column. `,digits:"1362"},{title:"Renban Sudoku",author:"Sam Cappleman-Lynes",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Purple lines in the grid are Renban lines. Digits on a line form a set of non-repeating, consecutive digits in any order.`,digits:"5426"},{title:"Give Me All",author:"Toir",rules:`Normal 6x6 Sudoku rules apply.

Palindrome: Digits along the grey line read the same forwards and backwards.

Printing Lines: There are purple lines with circles and arrows attached to them in the grid. The circled digit indicates how many times digits along the line (including the circles and arrows) appear in the cells pointed at by the arrow.

For example, a line 15(3)2 is valid if the digits it points at are 2; 3; 6; 3, because the 3 appears twice, 2 appears once, and no other digits from the line appear, amounting to 3 times which is the digit in the circle.`,digits:"4563"},{title:"Black Sheep",author:"Blobz",rules:`Normal 6x6 Sudoku rules apply.

Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.`,digits:"3642"},{title:"Drawers",author:"Stephane Bura",rules:`Normal 6x6 Sudoku rules apply.

Drawers: If a cell contains an arrow, it's called an origin. The cell in the direction of the arrow at a distance equal to the origin's value is called its destination. So a drawer with a 3 in the origin will occupy exactly 3 cells, including the origin and the destination.

For a given line (row or column) and a given perpendicular direction to this line for the arrows, the destinations are a new arrangement of the origins. This means that they are the same digits, in a different order.

You can think of the arrows as drawer handles, for drawers of lengths equal to the origins' values. You pull the drawers until the destinations take the place of the origins.`,digits:"6234"},{title:"Norin",author:"thetearex15",rules:`Normal 6x6 Sudoku rules apply.

Given Pencilmarks: Some pencilmarks have been given. These represent all the possible values of that cell.`,digits:"4125"},{title:"Even/odd and xv",author:"Casey",rules:`Normal 6x6 Sudoku rules apply.

XV Sums: Digits separated by a V must sum to 5, and digits separated by an X must sum to 10. 

Even/Odd: Cells containing a grey square are even. Cells containing a grey circle are odd.`,digits:"6413"},{title:"Mini Escalator",author:"Artifex_Amanda",rules:`Normal 6x6 Sudoku rules apply.

Thermometers: Digits must strictly increase along the thermometer starting from the bulb end.`,digits:"5241"},{title:"Skyscrapers",author:"Bill Murphy",rules:`Normal 6x6 Sudoku rules apply.

Skyscrapers: Digits in the grid represent skyscrapers, with their values corresponding to their heights. Taller skyscrapers obscure all shorter skyscrapers behind them. Clues outside the grid indicate the number of skyscrapers that can be seen in that row/column, from the line of sight of the clue.`,digits:"3416"},{title:"Consecutive Purpl Caterpillars",author:"Cane_Puzzles",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Purple lines in the grid are Renban lines. Digits on a line form a set of non-repeating, consecutive digits in any order.`,digits:"5463"},{title:"Cut Across",author:"Antiknight",rules:`Normal 6x6 Sudoku rules apply.

Arrows: There are circles in the grid with attached arrows. The digit in the circle is equal to the sum of the digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules.

Greater-than Arrows: There are red arrows as well in the grid. Digits in cells in with a red arrow are larger than all other digits in the cells along the direction of the arrow. `,digits:"3652"},{title:"Six Times Tables",author:"Paws🐾",rules:`Normal 6x6 Sudoku rules apply.

Muliplication Calcudoku: The digits in the cages must multiply to the given totals. Digits CAN repeat if normally allowed by other rules.`,digits:"4352"},{title:"Geradeweg Sudoku",author:"Wessel Strijkstra/It's Stark Jr.!",rules:`Normal 6x6 Sudoku rules apply.

Geradeweg: Using orthogonal lines, draw a non-intersecting loop through the centers of some cells that passes through every grey clue. Digits on every straight line segment that touches a clue must have a sum equal to the clue's value. In case of a ?, the value of that clue must be determined. `,digits:"3621"},{title:"N-Whispers",author:"mr.mango (ndsurgenor)",rules:`Normal 6x6 Sudoku rules apply.

N-Whispers: Adjacent digits along the green lines must have a difference of at least N, where N is the number of cells the line passes through.`,digits:"6452"},{title:"Lightbulb",author:"Doziam",rules:`Normal 6x6 Sudoku rules apply.

Between Lines: The digits on a between line must be strictly in-between the digits filled in the circles, excluding the digits in the circles.`,digits:"3621"},{title:"Renban Arrow Sudoku",author:"Timberlake",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"4352"},{title:"1812 Overture",author:"starwarigami",rules:`Place the digits 0-6 exactly once in every row, column, and box.
To achieve this, each row, column, and box contains one 'Schrödinger cell' that contains 2 digits.
The shaded cells which are shared with other grids must not be s-cells or contain 0.

Killer Cages: Digits in cages cannot repeat and sum to either 12 or 18.`,digits:"3524"},{title:"Pencilmark Sudoku",author:"jojo81",rules:`Normal 6x6 Sudoku rules apply.

Given Pencilmarks: Some pencilmarks have been given. These represent all the possible values of that cell.`,digits:"2465"},{title:"Green Stripes",author:"Emphyrio",rules:`Normal 6x6 Sudoku rules apply.

Shift Lines: Teal lines in the grid are shift lines. Each cell along one half of the line is paired with the cell at same distance from the center on the other side of the line. On one half of the line, each digit is exactly one more than the digit in the paired cell on the other half of the line. 
For instance a 4 cell long shift line could have digits 1-3-4-2 or 5-3-2-4, but not 5-3-2-6 (3 is one more than 2 but 5 isn't one more than 6).`,digits:"2315"},{title:"Optimize",author:"DadJokes",rules:`Normal 6x6 Sudoku rules apply.

Double Arrows: The sum of the digits in two circles is equal to the sum of the digits on the line connecting them. Digits are allowed to repeat in the circles and on the lines as normally allowed by other rules.`,digits:"6234"},{title:"International Travel",author:"99%Sneaky",rules:`Normal 6x6 Sudoku rules apply.

Border Sum Circles: Split the digits around a white circle into 2 groups of 2 along a thick box border. These two groups must have the same sum as each other, and each of the circles must have a different sum from the other circles. On the circle on the intersection of 4 boxes both vertical and horizontal pairs must be satisfied.

Anti-Border Sum Circles: Split the digits around a grey circle into 2 groups of 2 along a thick box border. These two groups must have a different sum from each other. Both horizontal and vertical pairs must be satisfied.`,digits:"4156"},{title:"Sequence Lines Sudoku",author:"Awesomesauce",rules:`Normal 6x6 Sudoku rules apply.

Sequence lines: Along a line all pairs of adjacent digits must have the same difference in the same direction, whether that is strictly increasing, decreasing, or staying the same.`,digits:"3412"},{title:"Butterfly Hunt",author:"Qodec",rules:`Normal 6x6 Sudoku rules apply.

Treasure hunt: A digit in a pink cell tells you how many of the 8 surrounding cells contain digits that are higher than the digit in the pink cell itself. Not all pink cells are necessarily given.`,digits:"6521"},{title:"Incomparable",author:"filuta",rules:`Normal 6x6 Sudoku rules apply.

Two orderings: Each digit is assigned a distinct letter from A-F. This gives the digits two possible orderings: numerical and alphabetical. You can note which letter is which digit in the cells underneath the grid.

Thermometers: Values must strictly increase along the thermometer starting from the bulb end, numerically or alphabetically.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive values (numerically or alphabetically) in any order.`,digits:"5146"},{title:"German Whispers Palindrome Sudoku",author:"Lizzy01",rules:`Normal 6x6 Sudoku rules apply.

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3.

Palindromes: The digits on a grey line read the same forwards and backwards.`,digits:"2653"},{title:"Jail",author:"Memeristor's Fiancée",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages: Digits in cages cannot repeat and sum to the value in the top left.`,digits:"2136"},{title:"Doing Rounds",author:"Clarke",rules:`Normal 6x6 Sudoku rules apply.

Arrow Loop: Draw a loop for Clarke to travel along counterclockwise, that starts and ends in his favorite spot, indicated by the cat. Clarke's loop must visit all the mint and lettuce.
As he goes, Clarke sniffs his surroundings, so the loop doesn't  intersects/crosses or touch itself orthogonally, but he may occasionally touch it diagonally.
When Clarke first enters a row or column containing lettuce, he must travel directly to the cell containing lettuce and nom nom on it. The only lettuce in the grid is in row 2 column 3.
When leaving a mint cell, Clarke rolls on his back and therefore must travel along a diagonal in any direction. In all other cases, he travels orthogonally.

Clarke's path consists entirely of arrows, starting with an arrow's circle, and then the digit(s) along the arrow (following the path counterclockwise as specified above). When an arrow ends, the next cell on the path becomes the next arrow's circle. All arrow circles consist of a single cell. His favorite spot is the first arrow's circle and not included on the last arrow at all. 

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"6514"},{title:"String is the best part",author:"Benny",rules:`Normal 6x6 Sudoku rules apply.

String Toys: These are Benny's string toys! For all the toys, the digit in toy's cell is the number of digits along the attached string that are higher than the digit in the toy's cell.`,digits:"4352"},{title:"White Space",author:"Fuxia",rules:`Normal 6x6 Sudoku rules apply.

Arrow Sums: A digit in a cell with arrows is the sum of all adjacent cells in the directions of the arrows. For example, if R2C5 is a 5, then R3C4 could be a 2 and R3C6 a 3.

The D in the bottom left is for the next puzzle, please ignore this for now.`,digits:"3516"},{title:"Double Ambiguity",author:"Sayori",rules:`Normal 6x6 Sudoku rules apply.

Doublers: There are six doublers, one in each row, column, and box. For the purposes of the clues, doublers double the value of a cell. Each digit from 1-6 is doubled exactly once. One of these doublers is given by the D in box 2. These doublers apply only to this grid.

Thermometers: Digits must strictly increase along the thermometer starting from the bulb end.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. If two arrows are attached to the same circle, they each independently sum to the value in the circle. Digits are allowed to repeat along the arrows as normally allowed by other rules.

Thermo-Arrow-Ambiguity: Grey lines with a bulb are either arrows or thermometers. Solvers must determine the line type for each line. Multiple lines coming out of the same bulb may be of different types. `,digits:"2461"},{title:"Parity Party Sudoku",author:"Édouard Lebeau aka SudoKanard",rules:`Normal 6x6 Sudoku rules apply.

Parity Party: Numbers outside the grid show the sum up to and including the first even digit or up to and including the first odd digit. The sum can be made up by a single digit.`,digits:"1425"},{title:"Extra Region Skyscraper",author:"MavericksJD",rules:`Normal 6x6 Sudoku rules apply.

Extra Region: Within green shaded cells, each digit must appear exactly once. 

Skyscrapers: Digits in the grid represent skyscrapers, with their values corresponding to their heights. Taller skyscrapers obscure all shorter skyscrapers behind them. Clues outside the grid indicate the number of skyscrapers seen in that row/column, from the line of sight of the clue.`,digits:"2614"},{title:"Matreshka Gusenitsa",author:"Lucian",rules:`Normal 6x6 Sudoku rules apply.

Russian Doll Sums: Outside clues indicate that there are two digits which sum to the clue and that the digit(s) between them also sum to the clue. For example, a 5 clue could be fulfilled, for instance, by 1234 or 154.`,digits:"6534"},{title:"Stitched together",author:"cornishjohn",rules:`Normal 6x6 Sudoku rules apply.

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3.

Kropki Dots: Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.`,digits:"2641"},{title:"Tetromino Thingy",author:"Myxo",rules:`Normal 6x6 Sudoku rules apply.

Same Sum Tetrominoes: Divide the grid fully into tetrominoes (ie. orthogonally connected areas of size 4). No two tetrominoes of the same shape may touch each other orthogonally, including rotations and reflections. Some tetromino borders have already been given.
Digits cannot repeat within a tetromino and the digits in each tetromino must sum to the same total.

Even: Cells containing a grey square are even.`,digits:"3562"},{title:"Counting Turns",author:"jubale",rules:`Normal 6x6 Sudoku rules apply.

Kropki Dots: Digits separated by a white dot are consecutive.

Mintonette Paths: Draw paths through the centers of some cells, connecting each large circle to exactly one other. Paths may not cross each other, themselves or the Kropki dots. Digits in circles represent the number of turns in their connected path.`,digits:"2314"},{title:"Parity Arrows",author:"mnasti2",rules:`Normal 6x6 Sudoku rules apply.

Parity Arrows: A digit in a circle is equal to the sum of either only the even digits or only the odd digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"3645"},{title:"Cater-cave Kropki Loop",author:"yttrio",rules:`Normal 6x6 Sudoku rules apply.

Cave Kropki Loop: Draw a one-cell-wide loop of orthogonally connected cells. The loop may not touch itself, not even diagonally.

Adjacent digits along the loop must either be consecutive or have a 2:1 ratio.

Digits in circles are on the loop and give the total number of loop cells (including itself) seen in all horizontal/vertical directions combined.  Non-loop cells block the vision.

Digits in squares are NOT on the loop and give the total number of NON-loop cells (including itself) seen in all horizontal/vertical directions combined.  Loop cells block the vision.`,digits:"6241"},{title:"Killer Sudoku",author:"Sotek",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages: Digits in cages cannot repeat and sum to the value in the top left.`,digits:"4325"},{title:"Domino Effect",author:"3good5you",rules:`Normal 6x6 Sudoku rules apply.

Domino Sum Lines: Split each line fully into pairs of adjacent digits. Every pair has the same sum. Different lines may have different sums. 

Inequality: The inequality symbol points to the smaller digit.`,digits:"6135"},{title:"6x6 Full Rank X-Sums",author:"jonn",rules:`Normal 6x6 Sudoku rules apply.

Full Rank: Each row represents two 6-digit numbers, one number reading left-to-right and the other number right-to-left, the same is true for each column (top-to-bottom and bottom-to-top), that gives 36 numbers in total. For example, if row 6 was 123456, this would represent the numbers, reading left-to-right, one hundred twenty-three thousand, four hundred fifty-six and, reading right-to-left, six hundred fifty-four thousand, three hundred twenty-one. Clues outside the grid indicate the numerical 'rank' of the 6-digit number in that row or column from that direction, with 1 being the lowest and 36 being the highest.

X-Sums: Digits outside the grid indicate the sum of the first X digits, where X is the digit in the closest cell to the clue.

Full-Rank-X-Sums Duality: Clues outside the grid are both full rank and x-sums clues. All clues adhere to both of the specified rules above. `,digits:"4612"},{title:"Corners and Kropki",author:"KingOfArrows",rules:`Normal 6x6 Sudoku rules apply.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow.  

Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.`,digits:"6351"},{title:"Oh no, my circles!",author:"dumediat",rules:`Normal 6x6 Sudoku rules apply.

Coordinate Arrows: Digits on an arrow spell out the coordinates for the digit that is their sum. The row number is written on the tail of the arrow, and the column number is written on the arrow tip. For example, if an arrow looks like this: -1 4>, then there must be a 5 (1+4) in r1c4. 

Each arrow must correspond to a different coordinate. 

Digits are allowed to repeat along the arrows as normally allowed by other rules. 
`,digits:"1432"},{title:"Wriggle Wroom",author:"Chilly",rules:`Normal 6x6 Sudoku rules apply.

Magic Labyrinth Sequence Snake: There is a single, non-branching, 1-cell wide, orthogonally-connected 'snake' in the grid. The snake may not touch itself orthogonally or diagonally.

The snake contains a potentially repeating sequence of three distinct digits, to be determined by the solver, called the Magic Labyrinth Sequence (MLS). The head of the snake is located below its tail. The MLS must appear in numerically increasing order from head to tail. For example, if the MLS is {2, 4, 6}, the ordered contents of the the snake could be: (head) 2 4 6 2 4 6 (tail).

However, Digits not included in the MLS can appear anywhere along the snake. So the ML sequence doesn't need to start or end exactly at the head or tail. For example, another valid snake, using the same MLS of {2, 4, 6}, could be: (head) 5 3 2 4 6 5 1 2 5 1 4 1 6 1 (tail).

Non-consecutive dots: Digits in cells separated by red dots must be non-consecutive. Additionally, the snake must take exactly one of the cells separated by red dots.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.`,digits:"6351"},{title:"Even It Up",author:"sujoyku",rules:`Normal 6x6 Sudoku rules apply. 

Quadruples: Digits in the circles must all appear at least once in the cells touching them.

Even count: Digits in the circles also indicate how many even digits those four surrounding cells contain. 

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. If two arrows are attached to the same circle, they each independently sum to the value in the circle. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"5214"},{title:"Multitasking",author:"Cris Moore",rules:`Normal 6x6 Sudoku rules apply. 

X-Sums: Digits outside the grid indicate the sum of the first X digits, where X is the digit in the closest cell to the clue.

Sandwich Sums: Digits outside the grid indicate the sum of the digits that are placed in-between the 1 and 6 in that row or column.

Little Killer: Numbers outside the grid are the sum of the digits pointed to along the indicated diagonal. Digits are allowed to repeat along those diagonals as normally allowed by the other rules.

X-sum, Sandwich, Little Killer Duality: The clues with value 'a' outside the grid are equal to the same integer number. Both clues are X-sums and sandwich sums within the row and little killers along both indicated diagonal.

Kropki Dots: Digits separated by a white dot are consecutive. Not all dots are necessarily given.`,digits:"4125"},{title:"Sudokupillar",author:"Jay Dyer",rules:`Normal 6x6 Sudoku rules apply. 

Kropki Dots: Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.

Region Sum Lines: Blue lines are split into segments by box borders. Within each individual line, the sum of the digits on each segment is the same. The sum of segments on different lines may or may not be equal.`,digits:"1536"},{title:"Parasite",author:"AnalyticalNinja",rules:`Normal 6x6 Sudoku rules apply.

Kropki Line: Adjacent digits along the grey line must either be consecutive or have a 1:2 ratio.`,digits:"4352"},{title:"Gravitational Lensing",author:"heliopolix",rules:`Normal 6x6 Sudoku rules apply.

Black Holes: Place six black holes, one in each row, column, and box. Digits may not repeat on black holes.  For the purposes of the clues in this grid, black holes have a value of zero. 

White Holes (Doublers): Place six white holes, one in each row, column, and box. Digits may not repeat on white holes. For the purposes of the clues in this grid, white holes double the value of a cell.  
White holes and black holes never share the same cell.

Killer Cages: Digits in cages cannot repeat (though values can). Values within a cage sum to the clue in the top left. A killer cage must contain an equal number of black and white holes, but that number may be zero.

Teleporting Little Killer: The clue outside the grid with an arrow is a teleporting little killer. It indicates that the sum of digits along a diagonally travelling path starting in the cell pointed at by the arrow is greater than zero. This path only ends when it reaches an edge of the grid. When the path enters a black hole cell it teleports to the white hole cell with the same digit maintaining the direction of travel of the original path and including the value of both holes in its sum. The path must visit the same number of black and white holes, but that number may be zero. 

Hole Sandwiches: Clues outside the grid without arrows give the sum of the digits between black and white holes in the indicated row or column, not including the values of the black and white holes in the sum.`,digits:"1526"},{title:"Dutch Six",author:"rad",rules:`Normal 6x6 Sudoku rules apply.

Dutch Whispers Lines: Adjacent digits along the orange lines must have a difference of at least 2.

XV Sums: Digits separated by a V must sum to 5.`,digits:"4362"},{title:"Outies",author:"RainbowSprinklez",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages: Digits in cages cannot repeat and sum to the value in the top left.

Kropki Dots: Digits separated by a white dot are consecutive. Not all dots are necessarily given.`,digits:"2156"},{title:"Kvell",author:"ZegreS",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.

Thermometers: Digits must strictly increase along the thermometer starting from the bulb end.`,digits:"4521"},{title:"Sandwich",author:"RockyRoer",rules:`Normal 6x6 Sudoku rules apply.

Sandwich Sums: Digits outside the grid indicate the sum of the digits that are placed in-between the 1 and 6 in that row or column.`,digits:"2653"},{title:"Choco Banana",author:"Menderbug",rules:`Normal 6x6 Sudoku rules apply.

Choco Banana: Shade some cells such that all groups of shaded cells are rectangular and that all groups of unshaded cells are not rectangular. Adjacent cells of the same shading are in the same group. 

Circled digits indicate the size of the group they are in, whether shaded or unshaded. A group may have any number of circled digits.`,digits:"3624"},{title:"Slow to the Rub",author:"FuryfulFawful",rules:`Normal 6x6 Sudoku rules apply.

Slow Thermometers: Digits must not decrease along the thermometer starting from the bulb end.`,digits:"1562"},{title:"Primed for some math",author:"Qinlux",rules:`Normal 6x6 Sudoku rules apply.

Touching Primes: The 4 digits orthogonally touching a cell containing a circle must sum to a prime number. Similarly, the 4 digits diagonally touching a cell containing a circle must sum to a prime number. The 2 primes around a circle don't necessarily have the same value.

Sums only include digits entirely within this grid. So for the circle in row 2 column 6 there is 2 diagonal cells, and 3 orthogonal cells summing to a prime each.`,digits:"3451"},{title:"caterdokupillar pozl",author:"PulverizingPancake",rules:`Normal 6x6 Sudoku rules apply.

Zipper Lines: Lavender lines in the grid are zipper lines. Digits equidistant from the line's center must sum to the same value. If a zipper line has an odd number of cells, the central cell's digit defines this sum. Digits may repeat on these lines if allowed by other sudoku rules. For example, a valid zipper line could be 3146253 which has a sum value of 6.`,digits:"1526"},{title:"Quiet neighbors",author:"DreamLibrarian",rules:`Normal 6x6 Sudoku rules apply.

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3.

Kropki Dots: Digits separated by a white dot are consecutive. Not all dots are necessarily given.`,digits:"4352"},{title:"Caged Consecutives",author:"Tulrak",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.

Killer Cages: Digits in cages cannot repeat.`,digits:"4651"},{title:"XV-Inequality",author:"CJK",rules:`Normal 6x6 Sudoku rules apply. 

Inequality: Inequality symbols point to the smaller digit.

V Sums: Digits separated by a V symbol must sum to 5.

Inequality-V-Ambiguity: All clues are either Inequality symbols or V symbols. All V symbols are oriented correctly, that is with their pointy side down. `,digits:"1563"},{title:"Xternal Spikes",author:"gdc",rules:`Normal 6x6 Sudoku rules apply. 

Arrows:  The value in a circle is equal to the sum of the values on the attached arrow. Values outside the grid on arrows may exceed 6.

X-Sum: Values placed outside the grid on arrows become an X-Sum clue.  That is, the value outside the grid must be equal to the sum of the first X digits, seen from the direction of clue, where X is the first digit in that row or column.`,digits:"5462"},{title:"Entropic Whisperpillar",author:"Nell Gwyn",rules:`Normal 6x6 Sudoku rules apply.

Entropic Whispers: Any two digits exactly one or two steps apart along the orange-and-yellow line must differ by at least two. 
In other words, adjacent digits must differ by at least two and any two digits which share the same adjacent digit must also differ by at least two. `,digits:"4316"},{title:"XY Sandwiches",author:"Scojo",rules:`Normal 6x6 Sudoku rules apply.

XY Sandwiches: Clues outside the grid give the sum of the digits between the Xth and Yth cells in that row or column, where X and Y are the first two cells seen from the direction of the clue.  For example, if the first two digits in the row are 2 and 5 then the digits between the 2nd and 5th cells (so the 3rd and 4th digits) when summed will give the value clued.`,digits:"3521"},{title:"Candypillar",author:"Niverio",rules:`Normal 6x6 Sudoku rules apply. 

XV Sums: Digits separated by a V must sum to 5, and digits separated by an X must sum to 10.

Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.

XV-Kopki-Ambiguity: There are 3 differently colored dots. The 3 colors represent 3 of the 4 constraints of White Kropki, Black Kropki, V and X clues (explained above). Which colour represents which constraint must be deduced by the solver, including which one is left out.

Palindromes: The digits on a grey line read the same forwards and backwards.`,digits:"6412"},{title:"Odd-Even Portal Sudoku",author:"Madmahogany",rules:`Normal 6x6 Sudoku rules apply.

Even/Odd: Cells containing a grey square are even. Cells containing a grey circle are odd.

Portal cells: Red squares are 'portal' cells. If a red cell in row R, column C has a value V, then the cell in row V, column R has a value C, and the cell in row C, column V has a value R. That is, if we represent the red cell as (R,C,V), then (V,R,C) and (C,V,R) also hold in the Sudoku grid. For example, if row 1 column 2 is 5 then row 5 column 1 is 2 and row 2 column 5 is 1.`,digits:"5136"},{title:"Group Sums Sudoku",author:"Prasanna Seshadri",rules:`Normal 6x6 Sudoku rules apply. 

Group sums: A number in a circle gives the sum of the digits in its surrounding cells. These digits can repeat if allowed by other rules. `,digits:"1352"},{title:"German Whispers Sudoku",author:"BugsCantHide",rules:`Normal 6x6 Sudoku rules apply. 

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3.`,digits:"5643"},{title:"Diagonal Skyscrapers",author:"punchingcatto",rules:`Normal 6x6 Sudoku rules apply.

Skyscrapers: Digits in the grid represent skyscrapers, with their values corresponding to their heights. Taller skyscrapers obscure all shorter skyscrapers behind them. Clues outside the grid indicate the number of skyscrapers seen in the grid along the indicated direction.`,digits:"3254"},{title:"Indexer Sudoku",author:"SSGranor",rules:`Normal 6x6 Sudoku rules apply.

Double Indexers: The digit in a shaded cell indicates both the column in which the cell's column number appears in its row and the row in which its row number appears in its column. (i.e. if r4c6 were a 3, there would be a 6 in r4c3 and a 4 in r3c6.)`,digits:"4163"},{title:"Caterdokupillar Renban",author:"Lombax999",rules:`Normal 6x6 Sudoku rules apply. 

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.`,digits:"2516"},{title:"34 Degree Caterdoku",author:"Twototenth",rules:`Normal 6x6 Sudoku rules apply. 

Row Indexers: Each digit in columns 3 and 4 indicates the position of the 3 and 4 in the same row (that is, if row 1 column 3 is a 5, then row 1 column 5 is a 3). 

Thermometers: Digits must strictly increase along the thermometer starting from the bulb end. `,digits:"4351"},{title:"M for Massive Clones",author:"Botaku",rules:`Normal 6x6 Sudoku rules apply. 

Clones: Cages contain exactly the same digits in the same relative positions. Digits are allowed to repeat within the cages as normally allowed by other rules.`,digits:"1624"},{title:"Aileron",author:"Teal",rules:`Normal 6x6 Sudoku rules apply.

Region Sum Lines: Blue lines are split into segments by box borders. Within each individual line, the sum of the digits on each segment is the same. The sum of segments on different lines may or may not be equal.`,digits:"3415"},{title:"Nabner kropki sudoku",author:"arctan",rules:`Normal 6x6 Sudoku rules apply. 

Nabner Lines: If a digit appears on a yellow line, then the digits consecutive with it do not appear on the line. Digits cannot repeat on a Nabner line. For example, if a 2 appears on the line, then 1 and 3 do not appear on the line, and another 2 also does not appear.

Kropki Dots: Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.`,digits:"1542"},{title:"Find the Whispers",author:"randall",rules:`Normal 6x6 Sudoku rules apply.

X-Sums: Digits outside the grid indicate the sum of the first X digits, where X is the digit in the closest cell to the clue. With ? representing any valid X-Sum value and >1 representing any X-Sum value greater than 1. This sequence of the first X cells will also be a valid German Whispers line.

German Whispers Lines: Adjacent digits along a German Whispers line must have a difference of at least 3. `,digits:"1643"},{title:"Crescent Moon",author:"Walker",rules:`Normal 6x6 Sudoku rules apply.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. `,digits:"6152"},{title:"German Whispers",author:"Yoshi Baroshi",rules:`Normal 6x6 Sudoku rules apply. 

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3.`,digits:"2634"},{title:"Sunday stroll",author:"Jonesy",rules:`Normal 6x6 Sudoku rules apply. 

Killer Cages: Digits in cages cannot repeat and sum to the value in the top left.

Killer Path: Draw a path that moves strictly orthogonally, starts in one circle and ends in the other circle. The path may touch itself orthogonally or diagonally, but may not branch or cross itself. The path visit each box at least once.

All digits on the path inside a box will sum to the same value as the killer cage clue for that box. Multiple visits count toward the same sum.

The path must always go through at least one cell of the killer cage but can never go through all cells of the cage.

The path in box 5 is unrestricted by the above rules. 
`,digits:"4152"},{title:"Irregular Palindrome Kropki",author:"Charlie Pugh",rules:`Normal Irregular Sudoku Rules Apply

Grey lines are palindromes and contain the same digits when read from each direction

Digits separated by a white dot must be consecutive
Digits separated by a black dot must have a ratio of 2:1
Not all possible digits are necessarily given`,digits:"6423"},{title:"Caterdokukropki",author:"myShoggoth",rules:`Normal 6x6 Sudoku rules apply.

Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given. 
`,digits:"5634"},{title:"Simon Says",author:"Derektionary",rules:`Normal 6x6 Sudoku rules apply. 

Look-and-say Arrows: The digit on the arrow's tip says how many times the digit in the arrow's circle appears along the set of diagonal cells that the arrow points to.`,digits:"4251"},{title:"Fingers",author:"Rubenscube",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.

Kropki Dots: Digits separated by a white dot are consecutive. Not all dots are necessarily given.`,digits:"3516"},{title:"Triangulation",author:"damasosos92",rules:`Normal 6x6 Sudoku rules apply. 

Region Sum Lines: These lines split into segments by box borders. Within each individual line, the sum of the digits on each segment is the same. The sum of segments on different lines may or may not be equal. 

Modular Lines: Along these lines any three adjacent digits along a modular line have a distinct remainder when dividing by 3. Digits that share a remainder are (1, 4); (2, 5); (3, 6). Digits may repeat on these lines if allowed by other rules.

Region-Sum-Lines-Modular Duality: Grey lines are both region sum lines and modular lines. They adhere to the properties above. A line within a single box does not have any implications for region sum line rules.`,digits:"5142"},{title:"Bait",author:"zetamath",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.

Kropki Dots: Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.`,digits:"6534"},{title:"Memristor's disappointment ",author:"Donatello_86 ",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages: Digits in cages sum to the value in the top left.

German Whispers Lines: Adjacent digits along the green lines must have a difference of at least 3. `,digits:"4612"},{title:"Productive",author:"Oddlyeven",rules:`Normal 6x6 Sudoku rules apply. 

Product-Sum Lines: Digits along a line sum to the product of the digits in the squares at either end of the line. Digits may repeat on a line as normally allowed by the other rules.`,digits:"3465"},{title:"German Snake",author:"Oripy",rules:`Normal 6x6 Sudoku rules apply.

German Snake: Shade some cells to form a non-intersecting path which does not touch itself orthogonally or diagonally. Black circles indicate the start and end of the path. While white circles indicate the cell is a part of the path.
The snake forms a German Whispers Line. Adjacent digits along the line must have a difference of at least 3.`,digits:"5341"},{title:"Parity Party",author:"Lulero",rules:`Normal 6x6 Sudoku rules apply.

Even/Odd: Cells containing a grey square are even. Cells containing a grey circle are odd.

Kropki Dots: Digits separated by a white dot are consecutive. Not all dots are necessarily given.`,digits:"6153"},{title:"higher-lower",author:"paletron",rules:`Normal 6x6 Sudoku rules apply.

Higher-lower lines: Along the pink lines, each digit must be strictly greater than or strictly less than all adjacent digits along the line. That is, the line consists of an alternating pattern of higher digit, lower digit, higher digit, lower digit, and so on.`,digits:"2541"},{title:"Renbank",author:"Dennis Chen",rules:`Normal 6x6 Sudoku rules apply.

Renban Lines: Digits on a purple line form a set of non-repeating, consecutive digits in any order.`,digits:"1653"},{title:"Box Sum Killer",author:"Scruffamudda",rules:`Normal 6x6 Sudoku rules apply.

Unique Box Sums: Digits within cages sum to cage totals that have to be determined by the solver. Cages within the same box have the same total. Cages in different boxes have different totals. 
`,digits:"4521"},{title:"Stepping Stones",author:"Meggen033",rules:`Normal 6x6 Sudoku rules apply.

Kropki Dots: Digits separated by a white dot are consecutive. Digits separated by a black dot have a 1:2 ratio. Not all dots are necessarily given.

Killer Cages: Digits in cages sum to the value in the top left.`,digits:"6312"},{title:"Invisible Sums",author:"KenGlue",rules:`Normal 6x6 Sudoku rules apply.

Sum Some Arrows: The sum of all digits behind the arrow's tail is equals the sum of the first N digits pointed at by the arrow's tip, where N must be determined by the solver and may be different for each arrow. 
`,digits:"3541"},{title:"Arrow Sudoku",author:"Nityant Agarwal",rules:`Normal 6x6 Sudoku rules apply.

Arrows: A digit in a circle is equal to the sum of the digits on the attached arrow. Digits are allowed to repeat along the arrows as normally allowed by other rules.`,digits:"3412"},{title:"Health Bar",author:"Black_Doom",rules:`Normal 6x6 Sudoku rules apply.

​​Hit Points: Clues outside the grid give the sum of digits that are equal to their distance from the clue. For example, a row of 152436 would have a 11 clue on the left, since 1, 4, and 6 match their positions, and a 5 clue on the right, since only the 5 matches its position from that direction.`,digits:"1534"},{title:"MOD-Euler",author:"Dr Logic",rules:`Normal 6x6 Sudoku rules apply.

Digits in cages sum to the marked total MOD 3.
Mod 3 Cages: The remainder of the division of the sum of the digits in cages by 3 is given in the top left.  In other words, digits in cages sum to the value in the top left when that sum is given in mod 3.  

Modular Lines: Any three adjacent digits along a line have a distinct remainder when dividing by 3. Digits that share a remainder are (1, 4); (2, 5); (3, 6). Digits may repeat on these lines if allowed by other rules.

Kropki Dots: Digits separated by a white dot are consecutive. Not all dots are necessarily given.`,digits:"2351"},{title:"Caterpillarsandthermowich",author:"PrimeWeasel",rules:`Normal 6x6 Sudoku rules apply.

Sandwich Sums: Clues outside the grid indicate the sum of the digits that are placed in-between the 1 and 6 in that row or column. A '?' may replace any value from 0-9, but no clue may have a leading zero.

Thermometer Sandwiches: Additionally, in rows/columns with Sandwich clues, the digits 1 and 6 and the digits that are placed in-between them all must be in increasing order when seen from the Sandwich clue. 
`,digits:"3465"},{title:"Killer Dominos",author:"Tahg",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages: Digits in cages sum to the value in the top left if given.

Dominos: No two cages contain the same set of digits.`,digits:"4152"},{title:"Walkies",author:"Lola",rules:`Normal 6x6 Sudoku rules apply.

Lola loves going for a walk, but where did she go? Draw a non-crossing line in the grid connecting the centres of adjacent cells to form a loop that visits each region exactly once. The line may move diagonally and must pass through each set of pawmarks. Adjacent digits on the line must have a difference of at most 1.`,digits:"2634"},{title:"Battenburger",author:"Cura",rules:`Normal 6x6 Sudoku rules apply.

Killer Cages: Digits in cages cannot repeat and sum to the value in the top left.

Battenburg: Around Battenburg symbols (grey checkered squares on corners) one pair of diagonal digits has to be even, the other one has to be odd.
Not all Battenburgs are necessarily given.`,digits:"4351"},{title:"The Rear End",author:"Panthera",rules:`Normal sudoku rules apply. Normal Japanese Sums rules apply. Colors used in this puzzle are Green, Red, Yellow. For best results, remove all unshaded marking you have done once completed.

Japanese Sums rules: the squares outside the grid indicate the order of the runs of contiguous cells that must be shaded the color of the clue. The number in the square indicates the sum of the cells in the run. There must be at least one unshaded cell between runs of the same color, but that is not required for runs of different colors. All shaded runs are given.`}],fa=(e,a)=>{const n=e.__vccOpts||e;for(const[t,i]of a)n[t]=i;return n},et=k({border:[Boolean,Number,String]},"border");function tt(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z();return{borderClasses:h(()=>{const t=de(e)?e.value:e.border,i=[];if(t===!0||t==="")i.push(`${a}--border`);else if(typeof t=="string"||t===0)for(const l of String(t).split(" "))i.push(`border-${l}`);return i})}}const pa=[null,"default","comfortable","compact"],nt=k({density:{type:String,default:"default",validator:e=>pa.includes(e)}},"density");function at(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z();return{densityClasses:h(()=>`${a}--density-${e.density}`)}}const $e=k({elevation:{type:[Number,String],validator(e){const a=parseInt(e);return!isNaN(a)&&a>=0&&a<=24}}},"elevation");function Me(e){return{elevationClasses:h(()=>{const n=de(e)?e.value:e.elevation,t=[];return n==null||t.push(`elevation-${n}`),t})}}const ge=k({rounded:{type:[Boolean,Number,String],default:void 0},tile:Boolean},"rounded");function me(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z();return{roundedClasses:h(()=>{const t=de(e)?e.value:e.rounded,i=de(e)?e.value:e.tile,l=[];if(t===!0||t==="")l.push(`${a}--rounded`);else if(typeof t=="string"||t===0)for(const s of String(t).split(" "))l.push(`rounded-${s}`);else(i||t===!1)&&l.push("rounded-0");return l})}}function it(e){return Lt(()=>{const a=[],n={};if(e.value.background)if(ht(e.value.background)){if(n.backgroundColor=e.value.background,!e.value.text&&En(e.value.background)){const t=Rn(e.value.background);if(t.a==null||t.a===1){const i=$n(t);n.color=i,n.caretColor=i}}}else a.push(`bg-${e.value.background}`);return e.value.text&&(ht(e.value.text)?(n.color=e.value.text,n.caretColor=e.value.text):a.push(`text-${e.value.text}`)),{colorClasses:a,colorStyles:n}})}function ce(e,a){const n=h(()=>({text:de(e)?e.value:a?e[a]:null})),{colorClasses:t,colorStyles:i}=it(n);return{textColorClasses:t,textColorStyles:i}}function se(e,a){const n=h(()=>({background:de(e)?e.value:a?e[a]:null})),{colorClasses:t,colorStyles:i}=it(n);return{backgroundColorClasses:t,backgroundColorStyles:i}}const va=["elevated","flat","tonal","outlined","text","plain"];function ya(e,a){return d(ie,null,[d("span",{key:"overlay",class:`${a}__overlay`},null),d("span",{key:"underlay",class:`${a}__underlay`},null)])}const $t=k({color:String,variant:{type:String,default:"elevated",validator:e=>va.includes(e)}},"variant");function ba(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z();const n=h(()=>{const{variant:l}=z(e);return`${a}--variant-${l}`}),{colorClasses:t,colorStyles:i}=it(h(()=>{const{variant:l,color:s}=z(e);return{[["elevated","flat"].includes(l)?"background":"text"]:s}}));return{colorClasses:t,colorStyles:i,variantClasses:n}}const Mt=k({baseColor:String,divided:Boolean,...et(),...$(),...nt(),...$e(),...ge(),...Y(),...J(),...$t()},"VBtnGroup"),wt=L()({name:"VBtnGroup",props:Mt(),setup(e,a){let{slots:n}=a;const{themeClasses:t}=ee(e),{densityClasses:i}=at(e),{borderClasses:l}=tt(e),{elevationClasses:s}=Me(e),{roundedClasses:o}=me(e);Ye({VBtn:{height:"auto",baseColor:T(e,"baseColor"),color:T(e,"color"),density:T(e,"density"),flat:!0,variant:T(e,"variant")}}),E(()=>d(e.tag,{class:["v-btn-group",{"v-btn-group--divided":e.divided},t.value,l.value,i.value,s.value,o.value,e.class],style:e.style},n))}}),Ft=k({modelValue:{type:null,default:void 0},multiple:Boolean,mandatory:[Boolean,String],max:Number,selectedClass:String,disabled:Boolean},"group"),qt=k({value:null,disabled:Boolean,selectedClass:String},"group-item");function zt(e,a){let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;const t=Pe("useGroupItem");if(!t)throw new Error("[Vuetify] useGroupItem composable must be used inside a component setup function");const i=Ie();Ue(Symbol.for(`${a.description}:id`),i);const l=Ve(a,null);if(!l){if(!n)return l;throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${a.description}`)}const s=T(e,"value"),o=h(()=>!!(l.disabled.value||e.disabled));l.register({id:i,value:s,disabled:o},t),Be(()=>{l.unregister(i)});const c=h(()=>l.isSelected(i)),g=h(()=>l.items.value[0].id===i),v=h(()=>l.items.value[l.items.value.length-1].id===i),f=h(()=>c.value&&[l.selectedClass.value,e.selectedClass]);return Q(c,u=>{t.emit("group:selected",{value:u})},{flush:"sync"}),{id:i,isSelected:c,isFirst:g,isLast:v,toggle:()=>l.select(i,!c.value),select:u=>l.select(i,u),selectedClass:f,value:s,disabled:o,group:l}}function Kt(e,a){let n=!1;const t=Mn([]),i=we(e,"modelValue",[],u=>u==null?[]:Wt(t,fe(u)),u=>{const r=ka(t,u);return e.multiple?r:r[0]}),l=Pe("useGroup");function s(u,r){const p=u,m=Symbol.for(`${a.description}:id`),b=qn(m,l==null?void 0:l.vnode).indexOf(r);z(p.value)==null&&(p.value=b,p.useIndexAsValue=!0),b>-1?t.splice(b,0,p):t.push(p)}function o(u){if(n)return;c();const r=t.findIndex(p=>p.id===u);t.splice(r,1)}function c(){const u=t.find(r=>!r.disabled);u&&e.mandatory==="force"&&!i.value.length&&(i.value=[u.id])}Pt(()=>{c()}),Be(()=>{n=!0}),Fn(()=>{for(let u=0;u<t.length;u++)t[u].useIndexAsValue&&(t[u].value=u)});function g(u,r){const p=t.find(m=>m.id===u);if(!(r&&(p!=null&&p.disabled)))if(e.multiple){const m=i.value.slice(),w=m.findIndex(P=>P===u),b=~w;if(r=r??!b,b&&e.mandatory&&m.length<=1||!b&&e.max!=null&&m.length+1>e.max)return;w<0&&r?m.push(u):w>=0&&!r&&m.splice(w,1),i.value=m}else{const m=i.value.includes(u);if(e.mandatory&&m)return;i.value=r??!m?[u]:[]}}function v(u){if(e.multiple,i.value.length){const r=i.value[0],p=t.findIndex(b=>b.id===r);let m=(p+u)%t.length,w=t[m];for(;w.disabled&&m!==p;)m=(m+u)%t.length,w=t[m];if(w.disabled)return;i.value=[t[m].id]}else{const r=t.find(p=>!p.disabled);r&&(i.value=[r.id])}}const f={register:s,unregister:o,selected:i,select:g,disabled:T(e,"disabled"),prev:()=>v(t.length-1),next:()=>v(1),isSelected:u=>i.value.includes(u),selectedClass:h(()=>e.selectedClass),items:h(()=>t),getItemIndex:u=>wa(t,u)};return Ue(a,f),f}function wa(e,a){const n=Wt(e,[a]);return n.length?e.findIndex(t=>t.id===n[0]):-1}function Wt(e,a){const n=[];return a.forEach(t=>{const i=e.find(s=>It(t,s.value)),l=e[t];(i==null?void 0:i.value)!=null?n.push(i.id):l!=null&&n.push(l.id)}),n}function ka(e,a){const n=[];return a.forEach(t=>{const i=e.findIndex(l=>l.id===t);if(~i){const l=e[i];n.push(l.value!=null?l.value:i)}}),n}const Ot=Symbol.for("vuetify:v-btn-toggle"),xa=k({...Mt(),...Ft()},"VBtnToggle");L()({name:"VBtnToggle",props:xa(),emits:{"update:modelValue":e=>!0},setup(e,a){let{slots:n}=a;const{isSelected:t,next:i,prev:l,select:s,selected:o}=Kt(e,Ot);return E(()=>{const c=wt.filterProps(e);return d(wt,re({class:["v-btn-toggle",e.class]},c,{style:e.style}),{default:()=>{var g;return[(g=n.default)==null?void 0:g.call(n,{isSelected:t,next:i,prev:l,select:s,selected:o})]}})}),{next:i,prev:l,select:s}}});const Sa=k({defaults:Object,disabled:Boolean,reset:[Number,String],root:[Boolean,String],scoped:Boolean},"VDefaultsProvider"),ue=L(!1)({name:"VDefaultsProvider",props:Sa(),setup(e,a){let{slots:n}=a;const{defaults:t,disabled:i,reset:l,root:s,scoped:o}=zn(e);return Ye(t,{reset:l,root:s,scoped:o,disabled:i}),()=>{var c;return(c=n.default)==null?void 0:c.call(n)}}}),Ca=["x-small","small","default","large","x-large"],lt=k({size:{type:[String,Number],default:"default"}},"size");function st(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z();return Lt(()=>{let n,t;return Xe(Ca,e.size)?n=`${a}--size-${e.size}`:e.size&&(t={width:F(e.size),height:F(e.size)}),{sizeClasses:n,sizeStyles:t}})}const Na=k({color:String,disabled:Boolean,start:Boolean,end:Boolean,icon:U,...$(),...lt(),...Y({tag:"i"}),...J()},"VIcon"),pe=L()({name:"VIcon",props:Na(),setup(e,a){let{attrs:n,slots:t}=a;const i=H(),{themeClasses:l}=ee(e),{iconData:s}=Kn(h(()=>i.value||e.icon)),{sizeClasses:o}=st(e),{textColorClasses:c,textColorStyles:g}=ce(T(e,"color"));return E(()=>{var u,r;const v=(u=t.default)==null?void 0:u.call(t);v&&(i.value=(r=Wn(v).filter(p=>p.type===On&&p.children&&typeof p.children=="string")[0])==null?void 0:r.children);const f=!!(n.onClick||n.onClickOnce);return d(s.value.component,{tag:e.tag,icon:s.value.icon,class:["v-icon","notranslate",l.value,o.value,c.value,{"v-icon--clickable":f,"v-icon--disabled":e.disabled,"v-icon--start":e.start,"v-icon--end":e.end},e.class],style:[o.value?void 0:{fontSize:F(e.size),height:F(e.size),width:F(e.size)},g.value,e.style],role:f?"button":void 0,"aria-hidden":!f,tabindex:f?e.disabled?-1:0:void 0},{default:()=>[v]})}),{}}});function jt(e,a){const n=H(),t=Te(!1);if(Vt){const i=new IntersectionObserver(l=>{t.value=!!l.find(s=>s.isIntersecting)},a);Be(()=>{i.disconnect()}),Q(n,(l,s)=>{s&&(i.unobserve(s),t.value=!1),l&&i.observe(l)},{flush:"post"})}return{intersectionRef:n,isIntersecting:t}}const Da=k({bgColor:String,color:String,indeterminate:[Boolean,String],modelValue:{type:[Number,String],default:0},rotate:{type:[Number,String],default:0},width:{type:[Number,String],default:4},...$(),...lt(),...Y({tag:"div"}),...J()},"VProgressCircular"),Ta=L()({name:"VProgressCircular",props:Da(),setup(e,a){let{slots:n}=a;const t=20,i=2*Math.PI*t,l=H(),{themeClasses:s}=ee(e),{sizeClasses:o,sizeStyles:c}=st(e),{textColorClasses:g,textColorStyles:v}=ce(T(e,"color")),{textColorClasses:f,textColorStyles:u}=ce(T(e,"bgColor")),{intersectionRef:r,isIntersecting:p}=jt(),{resizeRef:m,contentRect:w}=jn(),b=h(()=>Math.max(0,Math.min(100,parseFloat(e.modelValue)))),P=h(()=>Number(e.width)),I=h(()=>c.value?Number(e.size):w.value?w.value.width:Math.max(P.value,32)),S=h(()=>t/(1-P.value/I.value)*2),x=h(()=>P.value/I.value*S.value),y=h(()=>F((100-b.value)/100*i));return Xn(()=>{r.value=l.value,m.value=l.value}),E(()=>d(e.tag,{ref:l,class:["v-progress-circular",{"v-progress-circular--indeterminate":!!e.indeterminate,"v-progress-circular--visible":p.value,"v-progress-circular--disable-shrink":e.indeterminate==="disable-shrink"},s.value,o.value,g.value,e.class],style:[c.value,v.value,e.style],role:"progressbar","aria-valuemin":"0","aria-valuemax":"100","aria-valuenow":e.indeterminate?void 0:b.value},{default:()=>[d("svg",{style:{transform:`rotate(calc(-90deg + ${Number(e.rotate)}deg))`},xmlns:"http://www.w3.org/2000/svg",viewBox:`0 0 ${S.value} ${S.value}`},[d("circle",{class:["v-progress-circular__underlay",f.value],style:u.value,fill:"transparent",cx:"50%",cy:"50%",r:t,"stroke-width":x.value,"stroke-dasharray":i,"stroke-dashoffset":0},null),d("circle",{class:"v-progress-circular__overlay",fill:"transparent",cx:"50%",cy:"50%",r:t,"stroke-width":x.value,"stroke-dasharray":i,"stroke-dashoffset":y.value},null)]),n.default&&d("div",{class:"v-progress-circular__content"},[n.default({value:b.value})])]})),{}}}),kt={center:"center",top:"bottom",bottom:"top",left:"right",right:"left"},ot=k({location:String},"location");function rt(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,n=arguments.length>2?arguments[2]:void 0;const{isRtl:t}=ke();return{locationStyles:h(()=>{if(!e.location)return{};const{side:l,align:s}=da(e.location.split(" ").length>1?e.location:`${e.location} center`,t.value);function o(g){return n?n(g):0}const c={};return l!=="center"&&(a?c[kt[l]]=`calc(100% - ${o(l)}px)`:c[l]=0),s!=="center"?a?c[kt[s]]=`calc(100% - ${o(s)}px)`:c[s]=0:(l==="center"?c.top=c.left="50%":c[{top:"left",bottom:"left",left:"top",right:"top"}[l]]="50%",c.transform={top:"translateX(-50%)",bottom:"translateX(-50%)",left:"translateY(-50%)",right:"translateY(-50%)",center:"translate(-50%, -50%)"}[l]),c})}}const Aa=k({absolute:Boolean,active:{type:Boolean,default:!0},bgColor:String,bgOpacity:[Number,String],bufferValue:{type:[Number,String],default:0},bufferColor:String,bufferOpacity:[Number,String],clickable:Boolean,color:String,height:{type:[Number,String],default:4},indeterminate:Boolean,max:{type:[Number,String],default:100},modelValue:{type:[Number,String],default:0},opacity:[Number,String],reverse:Boolean,stream:Boolean,striped:Boolean,roundedBar:Boolean,...$(),...ot({location:"top"}),...ge(),...Y(),...J()},"VProgressLinear"),_a=L()({name:"VProgressLinear",props:Aa(),emits:{"update:modelValue":e=>!0},setup(e,a){var D;let{slots:n}=a;const t=we(e,"modelValue"),{isRtl:i,rtlClasses:l}=ke(),{themeClasses:s}=ee(e),{locationStyles:o}=rt(e),{textColorClasses:c,textColorStyles:g}=ce(e,"color"),{backgroundColorClasses:v,backgroundColorStyles:f}=se(h(()=>e.bgColor||e.color)),{backgroundColorClasses:u,backgroundColorStyles:r}=se(h(()=>e.bufferColor||e.bgColor||e.color)),{backgroundColorClasses:p,backgroundColorStyles:m}=se(e,"color"),{roundedClasses:w}=me(e),{intersectionRef:b,isIntersecting:P}=jt(),I=h(()=>parseFloat(e.max)),S=h(()=>parseFloat(e.height)),x=h(()=>gt(parseFloat(e.bufferValue)/I.value*100,0,100)),y=h(()=>gt(parseFloat(t.value)/I.value*100,0,100)),C=h(()=>i.value!==e.reverse),V=h(()=>e.indeterminate?"fade-transition":"slide-x-transition"),N=Gn&&((D=window.matchMedia)==null?void 0:D.call(window,"(forced-colors: active)").matches);function O(B){if(!b.value)return;const{left:M,right:A,width:_}=b.value.getBoundingClientRect(),R=C.value?_-B.clientX+(A-_):B.clientX-M;t.value=Math.round(R/_*I.value)}return E(()=>d(e.tag,{ref:b,class:["v-progress-linear",{"v-progress-linear--absolute":e.absolute,"v-progress-linear--active":e.active&&P.value,"v-progress-linear--reverse":C.value,"v-progress-linear--rounded":e.rounded,"v-progress-linear--rounded-bar":e.roundedBar,"v-progress-linear--striped":e.striped},w.value,s.value,l.value,e.class],style:[{bottom:e.location==="bottom"?0:void 0,top:e.location==="top"?0:void 0,height:e.active?F(S.value):0,"--v-progress-linear-height":F(S.value),...e.absolute?o.value:{}},e.style],role:"progressbar","aria-hidden":e.active?"false":"true","aria-valuemin":"0","aria-valuemax":e.max,"aria-valuenow":e.indeterminate?void 0:y.value,onClick:e.clickable&&O},{default:()=>[e.stream&&d("div",{key:"stream",class:["v-progress-linear__stream",c.value],style:{...g.value,[C.value?"left":"right"]:F(-S.value),borderTop:`${F(S.value/2)} dotted`,opacity:parseFloat(e.bufferOpacity),top:`calc(50% - ${F(S.value/4)})`,width:F(100-x.value,"%"),"--v-progress-linear-stream-to":F(S.value*(C.value?1:-1))}},null),d("div",{class:["v-progress-linear__background",N?void 0:v.value],style:[f.value,{opacity:parseFloat(e.bgOpacity),width:e.stream?0:void 0}]},null),d("div",{class:["v-progress-linear__buffer",N?void 0:u.value],style:[r.value,{opacity:parseFloat(e.bufferOpacity),width:F(x.value,"%")}]},null),d(Ee,{name:V.value},{default:()=>[e.indeterminate?d("div",{class:"v-progress-linear__indeterminate"},[["long","short"].map(B=>d("div",{key:B,class:["v-progress-linear__indeterminate",B,N?void 0:p.value],style:m.value},null))]):d("div",{class:["v-progress-linear__determinate",N?void 0:p.value],style:[m.value,{width:F(y.value,"%")}]},null)]}),n.default&&d("div",{class:"v-progress-linear__content"},[n.default({value:y.value,buffer:x.value})])]})),{}}}),Xt=k({loading:[Boolean,String]},"loader");function Gt(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z();return{loaderClasses:h(()=>({[`${a}--loading`]:e.loading}))}}function La(e,a){var t;let{slots:n}=a;return d("div",{class:`${e.name}__loader`},[((t=n.default)==null?void 0:t.call(n,{color:e.color,isActive:e.active}))||d(_a,{absolute:e.absolute,active:e.active,color:e.color,height:"2",indeterminate:!0},null)])}const Pa=["static","relative","fixed","absolute","sticky"],Ht=k({position:{type:String,validator:e=>Pa.includes(e)}},"position");function Yt(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z();return{positionClasses:h(()=>e.position?`${a}--${e.position}`:void 0)}}function Ia(){const e=Pe("useRoute");return h(()=>{var a;return(a=e==null?void 0:e.proxy)==null?void 0:a.$route})}function Va(e,a){var g,v;const n=Hn("RouterLink"),t=h(()=>!!(e.href||e.to)),i=h(()=>(t==null?void 0:t.value)||mt(a,"click")||mt(e,"click"));if(typeof n=="string"||!("useLink"in n))return{isLink:t,isClickable:i,href:T(e,"href")};const l=h(()=>({...e,to:T(()=>e.to||"")})),s=n.useLink(l.value),o=h(()=>e.to?s:void 0),c=Ia();return{isLink:t,isClickable:i,route:(g=o.value)==null?void 0:g.route,navigate:(v=o.value)==null?void 0:v.navigate,isActive:h(()=>{var f,u,r;return o.value?e.exact?c.value?((r=o.value.isExactActive)==null?void 0:r.value)&&It(o.value.route.value.query,c.value.query):((u=o.value.isExactActive)==null?void 0:u.value)??!1:((f=o.value.isActive)==null?void 0:f.value)??!1:!1}),href:h(()=>{var f;return e.to?(f=o.value)==null?void 0:f.route.value.href:e.href})}}const Ba=k({href:String,replace:Boolean,to:[String,Object],exact:Boolean},"router");function Ea(e,a){Q(()=>{var n;return(n=e.isActive)==null?void 0:n.value},n=>{e.isLink.value&&n&&a&&Ae(()=>{a(!0)})},{immediate:!0})}const Ge=Symbol("rippleStop"),Ra=80;function xt(e,a){e.style.transform=a,e.style.webkitTransform=a}function He(e){return e.constructor.name==="TouchEvent"}function Ut(e){return e.constructor.name==="KeyboardEvent"}const $a=function(e,a){var f;let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},t=0,i=0;if(!Ut(e)){const u=a.getBoundingClientRect(),r=He(e)?e.touches[e.touches.length-1]:e;t=r.clientX-u.left,i=r.clientY-u.top}let l=0,s=.3;(f=a._ripple)!=null&&f.circle?(s=.15,l=a.clientWidth/2,l=n.center?l:l+Math.sqrt((t-l)**2+(i-l)**2)/4):l=Math.sqrt(a.clientWidth**2+a.clientHeight**2)/2;const o=`${(a.clientWidth-l*2)/2}px`,c=`${(a.clientHeight-l*2)/2}px`,g=n.center?o:`${t-l}px`,v=n.center?c:`${i-l}px`;return{radius:l,scale:s,x:g,y:v,centerX:o,centerY:c}},_e={show(e,a){var r;let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(!((r=a==null?void 0:a._ripple)!=null&&r.enabled))return;const t=document.createElement("span"),i=document.createElement("span");t.appendChild(i),t.className="v-ripple__container",n.class&&(t.className+=` ${n.class}`);const{radius:l,scale:s,x:o,y:c,centerX:g,centerY:v}=$a(e,a,n),f=`${l*2}px`;i.className="v-ripple__animation",i.style.width=f,i.style.height=f,a.appendChild(t);const u=window.getComputedStyle(a);u&&u.position==="static"&&(a.style.position="relative",a.dataset.previousPosition="static"),i.classList.add("v-ripple__animation--enter"),i.classList.add("v-ripple__animation--visible"),xt(i,`translate(${o}, ${c}) scale3d(${s},${s},${s})`),i.dataset.activated=String(performance.now()),setTimeout(()=>{i.classList.remove("v-ripple__animation--enter"),i.classList.add("v-ripple__animation--in"),xt(i,`translate(${g}, ${v}) scale3d(1,1,1)`)},0)},hide(e){var l;if(!((l=e==null?void 0:e._ripple)!=null&&l.enabled))return;const a=e.getElementsByClassName("v-ripple__animation");if(a.length===0)return;const n=a[a.length-1];if(n.dataset.isHiding)return;n.dataset.isHiding="true";const t=performance.now()-Number(n.dataset.activated),i=Math.max(250-t,0);setTimeout(()=>{n.classList.remove("v-ripple__animation--in"),n.classList.add("v-ripple__animation--out"),setTimeout(()=>{var o;e.getElementsByClassName("v-ripple__animation").length===1&&e.dataset.previousPosition&&(e.style.position=e.dataset.previousPosition,delete e.dataset.previousPosition),((o=n.parentNode)==null?void 0:o.parentNode)===e&&e.removeChild(n.parentNode)},300)},i)}};function Jt(e){return typeof e>"u"||!!e}function ve(e){const a={},n=e.currentTarget;if(!(!(n!=null&&n._ripple)||n._ripple.touched||e[Ge])){if(e[Ge]=!0,He(e))n._ripple.touched=!0,n._ripple.isTouch=!0;else if(n._ripple.isTouch)return;if(a.center=n._ripple.centered||Ut(e),n._ripple.class&&(a.class=n._ripple.class),He(e)){if(n._ripple.showTimerCommit)return;n._ripple.showTimerCommit=()=>{_e.show(e,n,a)},n._ripple.showTimer=window.setTimeout(()=>{var t;(t=n==null?void 0:n._ripple)!=null&&t.showTimerCommit&&(n._ripple.showTimerCommit(),n._ripple.showTimerCommit=null)},Ra)}else _e.show(e,n,a)}}function St(e){e[Ge]=!0}function K(e){const a=e.currentTarget;if(a!=null&&a._ripple){if(window.clearTimeout(a._ripple.showTimer),e.type==="touchend"&&a._ripple.showTimerCommit){a._ripple.showTimerCommit(),a._ripple.showTimerCommit=null,a._ripple.showTimer=window.setTimeout(()=>{K(e)});return}window.setTimeout(()=>{a._ripple&&(a._ripple.touched=!1)}),_e.hide(a)}}function Qt(e){const a=e.currentTarget;a!=null&&a._ripple&&(a._ripple.showTimerCommit&&(a._ripple.showTimerCommit=null),window.clearTimeout(a._ripple.showTimer))}let ye=!1;function Zt(e){!ye&&(e.keyCode===ft.enter||e.keyCode===ft.space)&&(ye=!0,ve(e))}function en(e){ye=!1,K(e)}function tn(e){ye&&(ye=!1,K(e))}function nn(e,a,n){const{value:t,modifiers:i}=a,l=Jt(t);if(l||_e.hide(e),e._ripple=e._ripple??{},e._ripple.enabled=l,e._ripple.centered=i.center,e._ripple.circle=i.circle,Yn(t)&&t.class&&(e._ripple.class=t.class),l&&!n){if(i.stop){e.addEventListener("touchstart",St,{passive:!0}),e.addEventListener("mousedown",St);return}e.addEventListener("touchstart",ve,{passive:!0}),e.addEventListener("touchend",K,{passive:!0}),e.addEventListener("touchmove",Qt,{passive:!0}),e.addEventListener("touchcancel",K),e.addEventListener("mousedown",ve),e.addEventListener("mouseup",K),e.addEventListener("mouseleave",K),e.addEventListener("keydown",Zt),e.addEventListener("keyup",en),e.addEventListener("blur",tn),e.addEventListener("dragstart",K,{passive:!0})}else!l&&n&&an(e)}function an(e){e.removeEventListener("mousedown",ve),e.removeEventListener("touchstart",ve),e.removeEventListener("touchend",K),e.removeEventListener("touchmove",Qt),e.removeEventListener("touchcancel",K),e.removeEventListener("mouseup",K),e.removeEventListener("mouseleave",K),e.removeEventListener("keydown",Zt),e.removeEventListener("keyup",en),e.removeEventListener("dragstart",K),e.removeEventListener("blur",tn)}function Ma(e,a){nn(e,a,!1)}function Fa(e){delete e._ripple,an(e)}function qa(e,a){if(a.value===a.oldValue)return;const n=Jt(a.oldValue);nn(e,a,n)}const ln={mounted:Ma,unmounted:Fa,updated:qa},za=k({active:{type:Boolean,default:void 0},activeColor:String,baseColor:String,symbol:{type:null,default:Ot},flat:Boolean,icon:[Boolean,String,Function,Object],prependIcon:U,appendIcon:U,block:Boolean,readonly:Boolean,slim:Boolean,stacked:Boolean,ripple:{type:[Boolean,Object],default:!0},text:String,...et(),...$(),...nt(),...xe(),...$e(),...qt(),...Xt(),...ot(),...Ht(),...ge(),...Ba(),...lt(),...Y({tag:"button"}),...J(),...$t({variant:"elevated"})},"VBtn"),Ct=L()({name:"VBtn",props:za(),emits:{"group:selected":e=>!0},setup(e,a){let{attrs:n,slots:t}=a;const{themeClasses:i}=ee(e),{borderClasses:l}=tt(e),{densityClasses:s}=at(e),{dimensionStyles:o}=Se(e),{elevationClasses:c}=Me(e),{loaderClasses:g}=Gt(e),{locationStyles:v}=rt(e),{positionClasses:f}=Yt(e),{roundedClasses:u}=me(e),{sizeClasses:r,sizeStyles:p}=st(e),m=zt(e,e.symbol,!1),w=Va(e,n),b=h(()=>{var D;return e.active!==void 0?e.active:w.isLink.value?(D=w.isActive)==null?void 0:D.value:m==null?void 0:m.isSelected.value}),P=h(()=>b.value?e.activeColor??e.color:e.color),I=h(()=>{var B,M;return{color:(m==null?void 0:m.isSelected.value)&&(!w.isLink.value||((B=w.isActive)==null?void 0:B.value))||!m||((M=w.isActive)==null?void 0:M.value)?P.value??e.baseColor:e.baseColor,variant:e.variant}}),{colorClasses:S,colorStyles:x,variantClasses:y}=ba(I),C=h(()=>(m==null?void 0:m.disabled.value)||e.disabled),V=h(()=>e.variant==="elevated"&&!(e.disabled||e.flat||e.border)),N=h(()=>{if(!(e.value===void 0||typeof e.value=="symbol"))return Object(e.value)===e.value?JSON.stringify(e.value,null,0):e.value});function O(D){var B;C.value||w.isLink.value&&(D.metaKey||D.ctrlKey||D.shiftKey||D.button!==0||n.target==="_blank")||((B=w.navigate)==null||B.call(w,D),m==null||m.toggle())}return Ea(w,m==null?void 0:m.select),E(()=>{const D=w.isLink.value?"a":e.tag,B=!!(e.prependIcon||t.prepend),M=!!(e.appendIcon||t.append),A=!!(e.icon&&e.icon!==!0);return he(d(D,{type:D==="a"?void 0:"button",class:["v-btn",m==null?void 0:m.selectedClass.value,{"v-btn--active":b.value,"v-btn--block":e.block,"v-btn--disabled":C.value,"v-btn--elevated":V.value,"v-btn--flat":e.flat,"v-btn--icon":!!e.icon,"v-btn--loading":e.loading,"v-btn--readonly":e.readonly,"v-btn--slim":e.slim,"v-btn--stacked":e.stacked},i.value,l.value,S.value,s.value,c.value,g.value,f.value,u.value,r.value,y.value,e.class],style:[x.value,o.value,v.value,p.value,e.style],"aria-busy":e.loading?!0:void 0,disabled:C.value||void 0,href:w.href.value,tabindex:e.loading||e.readonly?-1:void 0,onClick:O,value:N.value},{default:()=>{var _;return[ya(!0,"v-btn"),!e.icon&&B&&d("span",{key:"prepend",class:"v-btn__prepend"},[t.prepend?d(ue,{key:"prepend-defaults",disabled:!e.prependIcon,defaults:{VIcon:{icon:e.prependIcon}}},t.prepend):d(pe,{key:"prepend-icon",icon:e.prependIcon},null)]),d("span",{class:"v-btn__content","data-no-activator":""},[!t.default&&A?d(pe,{key:"content-icon",icon:e.icon},null):d(ue,{key:"content-defaults",disabled:!A,defaults:{VIcon:{icon:e.icon}}},{default:()=>{var R;return[((R=t.default)==null?void 0:R.call(t))??e.text]}})]),!e.icon&&M&&d("span",{key:"append",class:"v-btn__append"},[t.append?d(ue,{key:"append-defaults",disabled:!e.appendIcon,defaults:{VIcon:{icon:e.appendIcon}}},t.append):d(pe,{key:"append-icon",icon:e.appendIcon},null)]),!!e.loading&&d("span",{key:"loader",class:"v-btn__loader"},[((_=t.loader)==null?void 0:_.call(t))??d(Ta,{color:typeof e.loading=="boolean"?void 0:e.loading,indeterminate:!0,width:"2"},null)])]}}),[[ln,!C.value&&e.ripple,"",{center:!!e.icon}]])}),{group:m}}}),be=Symbol.for("vuetify:v-expansion-panel"),Ka=k({disabled:Boolean,group:Boolean,hideOnLeave:Boolean,leaveAbsolute:Boolean,mode:String,origin:String},"transition");function W(e,a,n){return L()({name:e,props:Ka({mode:n,origin:a}),setup(t,i){let{slots:l}=i;const s={onBeforeEnter(o){t.origin&&(o.style.transformOrigin=t.origin)},onLeave(o){if(t.leaveAbsolute){const{offsetTop:c,offsetLeft:g,offsetWidth:v,offsetHeight:f}=o;o._transitionInitialStyles={position:o.style.position,top:o.style.top,left:o.style.left,width:o.style.width,height:o.style.height},o.style.position="absolute",o.style.top=`${c}px`,o.style.left=`${g}px`,o.style.width=`${v}px`,o.style.height=`${f}px`}t.hideOnLeave&&o.style.setProperty("display","none","important")},onAfterLeave(o){if(t.leaveAbsolute&&(o!=null&&o._transitionInitialStyles)){const{position:c,top:g,left:v,width:f,height:u}=o._transitionInitialStyles;delete o._transitionInitialStyles,o.style.position=c||"",o.style.top=g||"",o.style.left=v||"",o.style.width=f||"",o.style.height=u||""}}};return()=>{const o=t.group?Je:Ee;return Ce(o,{name:t.disabled?"":e,css:!t.disabled,...t.group?void 0:{mode:t.mode},...t.disabled?{}:s},l.default)}}})}function sn(e,a){let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"in-out";return L()({name:e,props:{mode:{type:String,default:n},disabled:Boolean,group:Boolean},setup(t,i){let{slots:l}=i;const s=t.group?Je:Ee;return()=>Ce(s,{name:t.disabled?"":e,css:!t.disabled,...t.disabled?{}:a},l.default)}})}function on(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"";const n=(arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1)?"width":"height",t=Un(`offset-${n}`);return{onBeforeEnter(s){s._parent=s.parentNode,s._initialStyle={transition:s.style.transition,overflow:s.style.overflow,[n]:s.style[n]}},onEnter(s){const o=s._initialStyle;s.style.setProperty("transition","none","important"),s.style.overflow="hidden";const c=`${s[t]}px`;s.style[n]="0",s.offsetHeight,s.style.transition=o.transition,e&&s._parent&&s._parent.classList.add(e),requestAnimationFrame(()=>{s.style[n]=c})},onAfterEnter:l,onEnterCancelled:l,onLeave(s){s._initialStyle={transition:"",overflow:s.style.overflow,[n]:s.style[n]},s.style.overflow="hidden",s.style[n]=`${s[t]}px`,s.offsetHeight,requestAnimationFrame(()=>s.style[n]="0")},onAfterLeave:i,onLeaveCancelled:i};function i(s){e&&s._parent&&s._parent.classList.remove(e),l(s)}function l(s){const o=s._initialStyle[n];s.style.overflow=s._initialStyle.overflow,o!=null&&(s.style[n]=o),delete s._initialStyle}}W("fab-transition","center center","out-in");W("dialog-bottom-transition");W("dialog-top-transition");W("fade-transition");W("scale-transition");W("scroll-x-transition");W("scroll-x-reverse-transition");W("scroll-y-transition");W("scroll-y-reverse-transition");W("slide-x-transition");W("slide-x-reverse-transition");const rn=W("slide-y-transition");W("slide-y-reverse-transition");const Wa=sn("expand-transition",on()),Oa=sn("expand-x-transition",on("",!0)),ja=k({eager:Boolean},"lazy");function Xa(e,a){const n=Te(!1),t=h(()=>n.value||e.eager||a.value);Q(a,()=>n.value=!0);function i(){e.eager||(n.value=!1)}return{isBooted:n,hasContent:t,onAfterLeave:i}}const un=k({...$(),...ja()},"VExpansionPanelText"),Le=L()({name:"VExpansionPanelText",props:un(),setup(e,a){let{slots:n}=a;const t=Ve(be);if(!t)throw new Error("[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel");const{hasContent:i,onAfterLeave:l}=Xa(e,t.isSelected);return E(()=>d(Wa,{onAfterLeave:l},{default:()=>{var s;return[he(d("div",{class:["v-expansion-panel-text",e.class],style:e.style},[n.default&&i.value&&d("div",{class:"v-expansion-panel-text__wrapper"},[(s=n.default)==null?void 0:s.call(n)])]),[[Qe,t.isSelected.value]])]}})),{}}}),dn=k({color:String,expandIcon:{type:U,default:"$expand"},collapseIcon:{type:U,default:"$collapse"},hideActions:Boolean,focusable:Boolean,static:Boolean,ripple:{type:[Boolean,Object],default:!1},readonly:Boolean,...$(),...xe()},"VExpansionPanelTitle"),Nt=L()({name:"VExpansionPanelTitle",directives:{Ripple:ln},props:dn(),setup(e,a){let{slots:n}=a;const t=Ve(be);if(!t)throw new Error("[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel");const{backgroundColorClasses:i,backgroundColorStyles:l}=se(e,"color"),{dimensionStyles:s}=Se(e),o=h(()=>({collapseIcon:e.collapseIcon,disabled:t.disabled.value,expanded:t.isSelected.value,expandIcon:e.expandIcon,readonly:e.readonly})),c=h(()=>t.isSelected.value?e.collapseIcon:e.expandIcon);return E(()=>{var g;return he(d("button",{class:["v-expansion-panel-title",{"v-expansion-panel-title--active":t.isSelected.value,"v-expansion-panel-title--focusable":e.focusable,"v-expansion-panel-title--static":e.static},i.value,e.class],style:[l.value,s.value,e.style],type:"button",tabindex:t.disabled.value?-1:void 0,disabled:t.disabled.value,"aria-expanded":t.isSelected.value,onClick:e.readonly?void 0:t.toggle},[d("span",{class:"v-expansion-panel-title__overlay"},null),(g=n.default)==null?void 0:g.call(n,o.value),!e.hideActions&&d(ue,{defaults:{VIcon:{icon:c.value}}},{default:()=>{var v;return[d("span",{class:"v-expansion-panel-title__icon"},[((v=n.actions)==null?void 0:v.call(n,o.value))??d(pe,null,null)])]}})]),[[Bt("ripple"),e.ripple]])}),{}}}),cn=k({title:String,text:String,bgColor:String,...$e(),...qt(),...ge(),...Y(),...dn(),...un()},"VExpansionPanel"),Dt=L()({name:"VExpansionPanel",props:cn(),emits:{"group:selected":e=>!0},setup(e,a){let{slots:n}=a;const t=zt(e,be),{backgroundColorClasses:i,backgroundColorStyles:l}=se(e,"bgColor"),{elevationClasses:s}=Me(e),{roundedClasses:o}=me(e),c=h(()=>(t==null?void 0:t.disabled.value)||e.disabled),g=h(()=>t.group.items.value.reduce((u,r,p)=>(t.group.selected.value.includes(r.id)&&u.push(p),u),[])),v=h(()=>{const u=t.group.items.value.findIndex(r=>r.id===t.id);return!t.isSelected.value&&g.value.some(r=>r-u===1)}),f=h(()=>{const u=t.group.items.value.findIndex(r=>r.id===t.id);return!t.isSelected.value&&g.value.some(r=>r-u===-1)});return Ue(be,t),E(()=>{const u=!!(n.text||e.text),r=!!(n.title||e.title),p=Nt.filterProps(e),m=Le.filterProps(e);return d(e.tag,{class:["v-expansion-panel",{"v-expansion-panel--active":t.isSelected.value,"v-expansion-panel--before-active":v.value,"v-expansion-panel--after-active":f.value,"v-expansion-panel--disabled":c.value},o.value,i.value,e.class],style:[l.value,e.style]},{default:()=>[d("div",{class:["v-expansion-panel__shadow",...s.value]},null),d(ue,{defaults:{VExpansionPanelTitle:{...p},VExpansionPanelText:{...m}}},{default:()=>{var w;return[r&&d(Nt,{key:"title"},{default:()=>[n.title?n.title():e.title]}),u&&d(Le,{key:"text"},{default:()=>[n.text?n.text():e.text]}),(w=n.default)==null?void 0:w.call(n)]}})]})}),{groupItem:t}}}),Ga=["default","accordion","inset","popout"],Ha=k({flat:Boolean,...Ft(),...Et(cn(),["bgColor","collapseIcon","color","eager","elevation","expandIcon","focusable","hideActions","readonly","ripple","rounded","tile","static"]),...J(),...$(),...Y(),variant:{type:String,default:"default",validator:e=>Ga.includes(e)}},"VExpansionPanels"),Ya=L()({name:"VExpansionPanels",props:Ha(),emits:{"update:modelValue":e=>!0},setup(e,a){let{slots:n}=a;const{next:t,prev:i}=Kt(e,be),{themeClasses:l}=ee(e),s=h(()=>e.variant&&`v-expansion-panels--variant-${e.variant}`);return Ye({VExpansionPanel:{bgColor:T(e,"bgColor"),collapseIcon:T(e,"collapseIcon"),color:T(e,"color"),eager:T(e,"eager"),elevation:T(e,"elevation"),expandIcon:T(e,"expandIcon"),focusable:T(e,"focusable"),hideActions:T(e,"hideActions"),readonly:T(e,"readonly"),ripple:T(e,"ripple"),rounded:T(e,"rounded"),static:T(e,"static")}}),E(()=>d(e.tag,{class:["v-expansion-panels",{"v-expansion-panels--flat":e.flat,"v-expansion-panels--tile":e.tile},l.value,s.value,e.class],style:e.style},{default:()=>{var o;return[(o=n.default)==null?void 0:o.call(n,{prev:i,next:t})]}})),{next:t,prev:i}}}),Ua=k({fluid:{type:Boolean,default:!1},...$(),...xe(),...Y()},"VContainer"),Ja=L()({name:"VContainer",props:Ua(),setup(e,a){let{slots:n}=a;const{rtlClasses:t}=ke(),{dimensionStyles:i}=Se(e);return E(()=>d(e.tag,{class:["v-container",{"v-container--fluid":e.fluid},t.value,e.class],style:[i.value,e.style]},n)),{}}}),hn=Re.reduce((e,a)=>(e[a]={type:[Boolean,String,Number],default:!1},e),{}),gn=Re.reduce((e,a)=>{const n="offset"+Ze(a);return e[n]={type:[String,Number],default:null},e},{}),mn=Re.reduce((e,a)=>{const n="order"+Ze(a);return e[n]={type:[String,Number],default:null},e},{}),Tt={col:Object.keys(hn),offset:Object.keys(gn),order:Object.keys(mn)};function Qa(e,a,n){let t=e;if(!(n==null||n===!1)){if(a){const i=a.replace(e,"");t+=`-${i}`}return e==="col"&&(t="v-"+t),e==="col"&&(n===""||n===!0)||(t+=`-${n}`),t.toLowerCase()}}const Za=["auto","start","end","center","baseline","stretch"],ei=k({cols:{type:[Boolean,String,Number],default:!1},...hn,offset:{type:[String,Number],default:null},...gn,order:{type:[String,Number],default:null},...mn,alignSelf:{type:String,default:null,validator:e=>Za.includes(e)},...$(),...Y()},"VCol"),Ke=L()({name:"VCol",props:ei(),setup(e,a){let{slots:n}=a;const t=h(()=>{const i=[];let l;for(l in Tt)Tt[l].forEach(o=>{const c=e[o],g=Qa(l,o,c);g&&i.push(g)});const s=i.some(o=>o.startsWith("v-col-"));return i.push({"v-col":!s||!e.cols,[`v-col-${e.cols}`]:e.cols,[`offset-${e.offset}`]:e.offset,[`order-${e.order}`]:e.order,[`align-self-${e.alignSelf}`]:e.alignSelf}),i});return()=>{var i;return Ce(e.tag,{class:[t.value,e.class],style:e.style},(i=n.default)==null?void 0:i.call(n))}}}),ut=["start","end","center"],fn=["space-between","space-around","space-evenly"];function dt(e,a){return Re.reduce((n,t)=>{const i=e+Ze(t);return n[i]=a(),n},{})}const ti=[...ut,"baseline","stretch"],pn=e=>ti.includes(e),vn=dt("align",()=>({type:String,default:null,validator:pn})),ni=[...ut,...fn],yn=e=>ni.includes(e),bn=dt("justify",()=>({type:String,default:null,validator:yn})),ai=[...ut,...fn,"stretch"],wn=e=>ai.includes(e),kn=dt("alignContent",()=>({type:String,default:null,validator:wn})),At={align:Object.keys(vn),justify:Object.keys(bn),alignContent:Object.keys(kn)},ii={align:"align",justify:"justify",alignContent:"align-content"};function li(e,a,n){let t=ii[e];if(n!=null){if(a){const i=a.replace(e,"");t+=`-${i}`}return t+=`-${n}`,t.toLowerCase()}}const si=k({dense:Boolean,noGutters:Boolean,align:{type:String,default:null,validator:pn},...vn,justify:{type:String,default:null,validator:yn},...bn,alignContent:{type:String,default:null,validator:wn},...kn,...$(),...Y()},"VRow"),oi=L()({name:"VRow",props:si(),setup(e,a){let{slots:n}=a;const t=h(()=>{const i=[];let l;for(l in At)At[l].forEach(s=>{const o=e[s],c=li(l,s,o);c&&i.push(c)});return i.push({"v-row--no-gutters":e.noGutters,"v-row--dense":e.dense,[`align-${e.align}`]:e.align,[`justify-${e.justify}`]:e.justify,[`align-content-${e.alignContent}`]:e.alignContent}),i});return()=>{var i;return Ce(e.tag,{class:["v-row",t.value,e.class],style:e.style},(i=n.default)==null?void 0:i.call(n))}}}),ri=k({color:String,...et(),...$(),...xe(),...$e(),...ot(),...Ht(),...ge(),...Y(),...J()},"VSheet"),We=L()({name:"VSheet",props:ri(),setup(e,a){let{slots:n}=a;const{themeClasses:t}=ee(e),{backgroundColorClasses:i,backgroundColorStyles:l}=se(T(e,"color")),{borderClasses:s}=tt(e),{dimensionStyles:o}=Se(e),{elevationClasses:c}=Me(e),{locationStyles:g}=rt(e),{positionClasses:v}=Yt(e),{roundedClasses:f}=me(e);return E(()=>d(e.tag,{class:["v-sheet",t.value,i.value,s.value,c.value,v.value,f.value,e.class],style:[l.value,o.value,g.value,e.style]},n)),{}}}),xn=k({transition:{type:[Boolean,String,Object],default:"fade-transition",validator:e=>e!==!0}},"transition"),Sn=(e,a)=>{let{slots:n}=a;const{transition:t,disabled:i,group:l,...s}=e,{component:o=l?Je:Ee,...c}=typeof t=="object"?t:{};return Ce(o,re(typeof t=="string"?{name:i?"":t}:c,typeof t=="string"?{}:Object.fromEntries(Object.entries({disabled:i,group:l}).filter(g=>{let[v,f]=g;return f!==void 0})),s),n)},ui=k({active:Boolean,disabled:Boolean,max:[Number,String],value:{type:[Number,String],default:0},...$(),...xn({transition:{component:rn}})},"VCounter"),di=L()({name:"VCounter",functional:!0,props:ui(),setup(e,a){let{slots:n}=a;const t=h(()=>e.max?`${e.value} / ${e.max}`:String(e.value));return E(()=>d(Sn,{transition:e.transition},{default:()=>[he(d("div",{class:["v-counter",{"text-error":e.max&&!e.disabled&&parseFloat(e.value)>parseFloat(e.max)},e.class],style:e.style},[n.default?n.default({counter:t.value,max:e.max,value:e.value}):t.value]),[[Qe,e.active]])]})),{}}}),ci=k({text:String,onClick:le(),...$(),...J()},"VLabel"),hi=L()({name:"VLabel",props:ci(),setup(e,a){let{slots:n}=a;return E(()=>{var t;return d("label",{class:["v-label",{"v-label--clickable":!!e.onClick},e.class],style:e.style,onClick:e.onClick},[e.text,(t=n.default)==null?void 0:t.call(n)])}),{}}}),gi=k({floating:Boolean,...$()},"VFieldLabel"),Ne=L()({name:"VFieldLabel",props:gi(),setup(e,a){let{slots:n}=a;return E(()=>d(hi,{class:["v-field-label",{"v-field-label--floating":e.floating},e.class],style:e.style,"aria-hidden":e.floating||void 0},n)),{}}});function Cn(e){const{t:a}=Jn();function n(t){let{name:i}=t;const l={prepend:"prependAction",prependInner:"prependAction",append:"appendAction",appendInner:"appendAction",clear:"clear"}[i],s=e[`onClick:${i}`],o=s&&l?a(`$vuetify.input.${l}`,e.label??""):void 0;return d(pe,{icon:e[`${i}Icon`],"aria-label":o,onClick:s},null)}return{InputIcon:n}}const Nn=k({focused:Boolean,"onUpdate:focused":le()},"focus");function Dn(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z();const n=we(e,"focused"),t=h(()=>({[`${a}--focused`]:n.value}));function i(){n.value=!0}function l(){n.value=!1}return{focusClasses:t,isFocused:n,focus:i,blur:l}}const mi=["underlined","outlined","filled","solo","solo-inverted","solo-filled","plain"],Tn=k({appendInnerIcon:U,bgColor:String,clearable:Boolean,clearIcon:{type:U,default:"$clear"},active:Boolean,centerAffix:{type:Boolean,default:void 0},color:String,baseColor:String,dirty:Boolean,disabled:{type:Boolean,default:null},error:Boolean,flat:Boolean,label:String,persistentClear:Boolean,prependInnerIcon:U,reverse:Boolean,singleLine:Boolean,variant:{type:String,default:"filled",validator:e=>mi.includes(e)},"onClick:clear":le(),"onClick:appendInner":le(),"onClick:prependInner":le(),...$(),...Xt(),...ge(),...J()},"VField"),An=L()({name:"VField",inheritAttrs:!1,props:{id:String,...Nn(),...Tn()},emits:{"update:focused":e=>!0,"update:modelValue":e=>!0},setup(e,a){let{attrs:n,emit:t,slots:i}=a;const{themeClasses:l}=ee(e),{loaderClasses:s}=Gt(e),{focusClasses:o,isFocused:c,focus:g,blur:v}=Dn(e),{InputIcon:f}=Cn(e),{roundedClasses:u}=me(e),{rtlClasses:r}=ke(),p=h(()=>e.dirty||e.active),m=h(()=>!e.singleLine&&!!(e.label||i.label)),w=Ie(),b=h(()=>e.id||`input-${w}`),P=h(()=>`${b.value}-messages`),I=H(),S=H(),x=H(),y=h(()=>["plain","underlined"].includes(e.variant)),{backgroundColorClasses:C,backgroundColorStyles:V}=se(T(e,"bgColor")),{textColorClasses:N,textColorStyles:O}=ce(h(()=>e.error||e.disabled?void 0:p.value&&c.value?e.color:e.baseColor));Q(p,A=>{if(m.value){const _=I.value.$el,R=S.value.$el;requestAnimationFrame(()=>{const j=ca(_),X=R.getBoundingClientRect(),oe=X.x-j.x,te=X.y-j.y-(j.height/2-X.height/2),ne=X.width/.75,ae=Math.abs(ne-j.width)>1?{maxWidth:F(ne)}:void 0,Pn=getComputedStyle(_),ct=getComputedStyle(R),In=parseFloat(Pn.transitionDuration)*1e3||150,Vn=parseFloat(ct.getPropertyValue("--v-field-label-scale")),Bn=ct.getPropertyValue("color");_.style.visibility="visible",R.style.visibility="hidden",ha(_,{transform:`translate(${oe}px, ${te}px) scale(${Vn})`,color:Bn,...ae},{duration:In,easing:ga,direction:A?"normal":"reverse"}).finished.then(()=>{_.style.removeProperty("visibility"),R.style.removeProperty("visibility")})})}},{flush:"post"});const D=h(()=>({isActive:p,isFocused:c,controlRef:x,blur:v,focus:g}));function B(A){A.target!==document.activeElement&&A.preventDefault()}function M(A){var _;A.key!=="Enter"&&A.key!==" "||(A.preventDefault(),A.stopPropagation(),(_=e["onClick:clear"])==null||_.call(e,new MouseEvent("click")))}return E(()=>{var oe,te,ne;const A=e.variant==="outlined",_=!!(i["prepend-inner"]||e.prependInnerIcon),R=!!(e.clearable||i.clear),j=!!(i["append-inner"]||e.appendInnerIcon||R),X=()=>i.label?i.label({...D.value,label:e.label,props:{for:b.value}}):e.label;return d("div",re({class:["v-field",{"v-field--active":p.value,"v-field--appended":j,"v-field--center-affix":e.centerAffix??!y.value,"v-field--disabled":e.disabled,"v-field--dirty":e.dirty,"v-field--error":e.error,"v-field--flat":e.flat,"v-field--has-background":!!e.bgColor,"v-field--persistent-clear":e.persistentClear,"v-field--prepended":_,"v-field--reverse":e.reverse,"v-field--single-line":e.singleLine,"v-field--no-label":!X(),[`v-field--variant-${e.variant}`]:!0},l.value,C.value,o.value,s.value,u.value,r.value,e.class],style:[V.value,e.style],onClick:B},n),[d("div",{class:"v-field__overlay"},null),d(La,{name:"v-field",active:!!e.loading,color:e.error?"error":typeof e.loading=="string"?e.loading:e.color},{default:i.loader}),_&&d("div",{key:"prepend",class:"v-field__prepend-inner"},[e.prependInnerIcon&&d(f,{key:"prepend-icon",name:"prependInner"},null),(oe=i["prepend-inner"])==null?void 0:oe.call(i,D.value)]),d("div",{class:"v-field__field","data-no-activator":""},[["filled","solo","solo-inverted","solo-filled"].includes(e.variant)&&m.value&&d(Ne,{key:"floating-label",ref:S,class:[N.value],floating:!0,for:b.value,style:O.value},{default:()=>[X()]}),d(Ne,{ref:I,for:b.value},{default:()=>[X()]}),(te=i.default)==null?void 0:te.call(i,{...D.value,props:{id:b.value,class:"v-field__input","aria-describedby":P.value},focus:g,blur:v})]),R&&d(Oa,{key:"clear"},{default:()=>[he(d("div",{class:"v-field__clearable",onMousedown:ae=>{ae.preventDefault(),ae.stopPropagation()}},[d(ue,{defaults:{VIcon:{icon:e.clearIcon}}},{default:()=>[i.clear?i.clear({...D.value,props:{onKeydown:M,onFocus:g,onBlur:v,onClick:e["onClick:clear"]}}):d(f,{name:"clear",onKeydown:M,onFocus:g,onBlur:v},null)]})]),[[Qe,e.dirty]])]}),j&&d("div",{key:"append",class:"v-field__append-inner"},[(ne=i["append-inner"])==null?void 0:ne.call(i,D.value),e.appendInnerIcon&&d(f,{key:"append-icon",name:"appendInner"},null)]),d("div",{class:["v-field__outline",N.value],style:O.value},[A&&d(ie,null,[d("div",{class:"v-field__outline__start"},null),m.value&&d("div",{class:"v-field__outline__notch"},[d(Ne,{ref:S,floating:!0,for:b.value},{default:()=>[X()]})]),d("div",{class:"v-field__outline__end"},null)]),y.value&&m.value&&d(Ne,{ref:S,floating:!0,for:b.value},{default:()=>[X()]})])])}),{controlRef:x}}});function fi(e){const a=Object.keys(An.props).filter(n=>!Qn(n)&&n!=="class"&&n!=="style");return Et(e,a)}const pi=k({active:Boolean,color:String,messages:{type:[Array,String],default:()=>[]},...$(),...xn({transition:{component:rn,leaveAbsolute:!0,group:!0}})},"VMessages"),vi=L()({name:"VMessages",props:pi(),setup(e,a){let{slots:n}=a;const t=h(()=>fe(e.messages)),{textColorClasses:i,textColorStyles:l}=ce(h(()=>e.color));return E(()=>d(Sn,{transition:e.transition,tag:"div",class:["v-messages",i.value,e.class],style:[l.value,e.style],role:"alert","aria-live":"polite"},{default:()=>[e.active&&t.value.map((s,o)=>d("div",{class:"v-messages__message",key:`${o}-${t.value}`},[n.message?n.message({message:s}):s]))]})),{}}}),yi=Symbol.for("vuetify:form");function bi(){return Ve(yi,null)}const wi=k({disabled:{type:Boolean,default:null},error:Boolean,errorMessages:{type:[Array,String],default:()=>[]},maxErrors:{type:[Number,String],default:1},name:String,label:String,readonly:{type:Boolean,default:null},rules:{type:Array,default:()=>[]},modelValue:null,validateOn:String,validationValue:null,...Nn()},"validation");function ki(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Z(),n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Ie();const t=we(e,"modelValue"),i=h(()=>e.validationValue===void 0?t.value:e.validationValue),l=bi(),s=H([]),o=Te(!0),c=h(()=>!!(fe(t.value===""?null:t.value).length||fe(i.value===""?null:i.value).length)),g=h(()=>!!(e.disabled??(l==null?void 0:l.isDisabled.value))),v=h(()=>!!(e.readonly??(l==null?void 0:l.isReadonly.value))),f=h(()=>{var x;return(x=e.errorMessages)!=null&&x.length?fe(e.errorMessages).concat(s.value).slice(0,Math.max(0,+e.maxErrors)):s.value}),u=h(()=>{let x=(e.validateOn??(l==null?void 0:l.validateOn.value))||"input";x==="lazy"&&(x="input lazy"),x==="eager"&&(x="input eager");const y=new Set((x==null?void 0:x.split(" "))??[]);return{input:y.has("input"),blur:y.has("blur")||y.has("input")||y.has("invalid-input"),invalidInput:y.has("invalid-input"),lazy:y.has("lazy"),eager:y.has("eager")}}),r=h(()=>{var x;return e.error||(x=e.errorMessages)!=null&&x.length?!1:e.rules.length?o.value?s.value.length||u.value.lazy?null:!0:!s.value.length:!0}),p=Te(!1),m=h(()=>({[`${a}--error`]:r.value===!1,[`${a}--dirty`]:c.value,[`${a}--disabled`]:g.value,[`${a}--readonly`]:v.value})),w=Pe("validation"),b=h(()=>e.name??z(n));Zn(()=>{l==null||l.register({id:b.value,vm:w,validate:S,reset:P,resetValidation:I})}),Be(()=>{l==null||l.unregister(b.value)}),Pt(async()=>{u.value.lazy||await S(!u.value.eager),l==null||l.update(b.value,r.value,f.value)}),pt(()=>u.value.input||u.value.invalidInput&&r.value===!1,()=>{Q(i,()=>{if(i.value!=null)S();else if(e.focused){const x=Q(()=>e.focused,y=>{y||S(),x()})}})}),pt(()=>u.value.blur,()=>{Q(()=>e.focused,x=>{x||S()})}),Q([r,f],()=>{l==null||l.update(b.value,r.value,f.value)});async function P(){t.value=null,await Ae(),await I()}async function I(){o.value=!0,u.value.lazy?s.value=[]:await S(!u.value.eager)}async function S(){let x=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;const y=[];p.value=!0;for(const C of e.rules){if(y.length>=+(e.maxErrors??1))break;const N=await(typeof C=="function"?C:()=>C)(i.value);if(N!==!0){if(N!==!1&&typeof N!="string"){console.warn(`${N} is not a valid value. Rule functions must return boolean true or a string.`);continue}y.push(N||"")}}return s.value=y,p.value=!1,o.value=x,s.value}return{errorMessages:f,isDirty:c,isDisabled:g,isReadonly:v,isPristine:o,isValid:r,isValidating:p,reset:P,resetValidation:I,validate:S,validationClasses:m}}const _n=k({id:String,appendIcon:U,centerAffix:{type:Boolean,default:!0},prependIcon:U,hideDetails:[Boolean,String],hideSpinButtons:Boolean,hint:String,persistentHint:Boolean,messages:{type:[Array,String],default:()=>[]},direction:{type:String,default:"horizontal",validator:e=>["horizontal","vertical"].includes(e)},"onClick:prepend":le(),"onClick:append":le(),...$(),...nt(),...ea(xe(),["maxWidth","minWidth","width"]),...J(),...wi()},"VInput"),_t=L()({name:"VInput",props:{..._n()},emits:{"update:modelValue":e=>!0},setup(e,a){let{attrs:n,slots:t,emit:i}=a;const{densityClasses:l}=at(e),{dimensionStyles:s}=Se(e),{themeClasses:o}=ee(e),{rtlClasses:c}=ke(),{InputIcon:g}=Cn(e),v=Ie(),f=h(()=>e.id||`input-${v}`),u=h(()=>`${f.value}-messages`),{errorMessages:r,isDirty:p,isDisabled:m,isReadonly:w,isPristine:b,isValid:P,isValidating:I,reset:S,resetValidation:x,validate:y,validationClasses:C}=ki(e,"v-input",f),V=h(()=>({id:f,messagesId:u,isDirty:p,isDisabled:m,isReadonly:w,isPristine:b,isValid:P,isValidating:I,reset:S,resetValidation:x,validate:y})),N=h(()=>{var O;return(O=e.errorMessages)!=null&&O.length||!b.value&&r.value.length?r.value:e.hint&&(e.persistentHint||e.focused)?e.hint:e.messages});return E(()=>{var A,_,R,j;const O=!!(t.prepend||e.prependIcon),D=!!(t.append||e.appendIcon),B=N.value.length>0,M=!e.hideDetails||e.hideDetails==="auto"&&(B||!!t.details);return d("div",{class:["v-input",`v-input--${e.direction}`,{"v-input--center-affix":e.centerAffix,"v-input--hide-spin-buttons":e.hideSpinButtons},l.value,o.value,c.value,C.value,e.class],style:[s.value,e.style]},[O&&d("div",{key:"prepend",class:"v-input__prepend"},[(A=t.prepend)==null?void 0:A.call(t,V.value),e.prependIcon&&d(g,{key:"prepend-icon",name:"prepend"},null)]),t.default&&d("div",{class:"v-input__control"},[(_=t.default)==null?void 0:_.call(t,V.value)]),D&&d("div",{key:"append",class:"v-input__append"},[e.appendIcon&&d(g,{key:"append-icon",name:"append"},null),(R=t.append)==null?void 0:R.call(t,V.value)]),M&&d("div",{class:"v-input__details"},[d(vi,{id:u.value,active:B,messages:N.value},{message:t.message}),(j=t.details)==null?void 0:j.call(t,V.value)])])}),{reset:S,resetValidation:x,validate:y,isValid:P,errorMessages:r}}}),Oe=Symbol("Forwarded refs");function je(e,a){let n=e;for(;n;){const t=Reflect.getOwnPropertyDescriptor(n,a);if(t)return t;n=Object.getPrototypeOf(n)}}function xi(e){for(var a=arguments.length,n=new Array(a>1?a-1:0),t=1;t<a;t++)n[t-1]=arguments[t];return e[Oe]=n,new Proxy(e,{get(i,l){if(Reflect.has(i,l))return Reflect.get(i,l);if(!(typeof l=="symbol"||l.startsWith("$")||l.startsWith("__"))){for(const s of n)if(s.value&&Reflect.has(s.value,l)){const o=Reflect.get(s.value,l);return typeof o=="function"?o.bind(s.value):o}}},has(i,l){if(Reflect.has(i,l))return!0;if(typeof l=="symbol"||l.startsWith("$")||l.startsWith("__"))return!1;for(const s of n)if(s.value&&Reflect.has(s.value,l))return!0;return!1},set(i,l,s){if(Reflect.has(i,l))return Reflect.set(i,l,s);if(typeof l=="symbol"||l.startsWith("$")||l.startsWith("__"))return!1;for(const o of n)if(o.value&&Reflect.has(o.value,l))return Reflect.set(o.value,l,s);return!1},getOwnPropertyDescriptor(i,l){var o;const s=Reflect.getOwnPropertyDescriptor(i,l);if(s)return s;if(!(typeof l=="symbol"||l.startsWith("$")||l.startsWith("__"))){for(const c of n){if(!c.value)continue;const g=je(c.value,l)??("_"in c.value?je((o=c.value._)==null?void 0:o.setupState,l):void 0);if(g)return g}for(const c of n){const g=c.value&&c.value[Oe];if(!g)continue;const v=g.slice();for(;v.length;){const f=v.shift(),u=je(f.value,l);if(u)return u;const r=f.value&&f.value[Oe];r&&v.push(...r)}}}}})}function Si(e,a){if(!Vt)return;const n=a.modifiers||{},t=a.value,{handler:i,options:l}=typeof t=="object"?t:{handler:t,options:{}},s=new IntersectionObserver(function(){var f;let o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],c=arguments.length>1?arguments[1]:void 0;const g=(f=e._observe)==null?void 0:f[a.instance.$.uid];if(!g)return;const v=o.some(u=>u.isIntersecting);i&&(!n.quiet||g.init)&&(!n.once||v||g.init)&&i(v,o,c),v&&n.once?Ln(e,a):g.init=!0},l);e._observe=Object(e._observe),e._observe[a.instance.$.uid]={init:!1,observer:s},s.observe(e)}function Ln(e,a){var t;const n=(t=e._observe)==null?void 0:t[a.instance.$.uid];n&&(n.observer.unobserve(e),delete e._observe[a.instance.$.uid])}const Ci={mounted:Si,unmounted:Ln},Ni=["color","file","time","date","datetime-local","week","month"],Di=k({autofocus:Boolean,counter:[Boolean,Number,String],counterValue:[Number,Function],prefix:String,placeholder:String,persistentPlaceholder:Boolean,persistentCounter:Boolean,suffix:String,role:String,type:{type:String,default:"text"},modelModifiers:Object,..._n(),...Tn()},"VTextField"),Ti=L()({name:"VTextField",directives:{Intersect:Ci},inheritAttrs:!1,props:Di(),emits:{"click:control":e=>!0,"mousedown:control":e=>!0,"update:focused":e=>!0,"update:modelValue":e=>!0},setup(e,a){let{attrs:n,emit:t,slots:i}=a;const l=we(e,"modelValue"),{isFocused:s,focus:o,blur:c}=Dn(e),g=h(()=>typeof e.counterValue=="function"?e.counterValue(l.value):typeof e.counterValue=="number"?e.counterValue:(l.value??"").toString().length),v=h(()=>{if(n.maxlength)return n.maxlength;if(!(!e.counter||typeof e.counter!="number"&&typeof e.counter!="string"))return e.counter}),f=h(()=>["plain","underlined"].includes(e.variant));function u(y,C){var V,N;!e.autofocus||!y||(N=(V=C[0].target)==null?void 0:V.focus)==null||N.call(V)}const r=H(),p=H(),m=H(),w=h(()=>Ni.includes(e.type)||e.persistentPlaceholder||s.value||e.active);function b(){var y;m.value!==document.activeElement&&((y=m.value)==null||y.focus()),s.value||o()}function P(y){t("mousedown:control",y),y.target!==m.value&&(b(),y.preventDefault())}function I(y){b(),t("click:control",y)}function S(y){y.stopPropagation(),b(),Ae(()=>{l.value=null,aa(e["onClick:clear"],y)})}function x(y){var V;const C=y.target;if(l.value=C.value,(V=e.modelModifiers)!=null&&V.trim&&["text","search","password","tel","url"].includes(e.type)){const N=[C.selectionStart,C.selectionEnd];Ae(()=>{C.selectionStart=N[0],C.selectionEnd=N[1]})}}return E(()=>{const y=!!(i.counter||e.counter!==!1&&e.counter!=null),C=!!(y||i.details),[V,N]=ta(n),{modelValue:O,...D}=_t.filterProps(e),B=fi(e);return d(_t,re({ref:r,modelValue:l.value,"onUpdate:modelValue":M=>l.value=M,class:["v-text-field",{"v-text-field--prefixed":e.prefix,"v-text-field--suffixed":e.suffix,"v-input--plain-underlined":f.value},e.class],style:e.style},V,D,{centerAffix:!f.value,focused:s.value}),{...i,default:M=>{let{id:A,isDisabled:_,isDirty:R,isReadonly:j,isValid:X}=M;return d(An,re({ref:p,onMousedown:P,onClick:I,"onClick:clear":S,"onClick:prependInner":e["onClick:prependInner"],"onClick:appendInner":e["onClick:appendInner"],role:e.role},B,{id:A.value,active:w.value||R.value,dirty:R.value||e.dirty,disabled:_.value,focused:s.value,error:X.value===!1}),{...i,default:oe=>{let{props:{class:te,...ne}}=oe;const ae=he(d("input",re({ref:m,value:l.value,onInput:x,autofocus:e.autofocus,readonly:j.value,disabled:_.value,name:e.name,placeholder:e.placeholder,size:1,type:e.type,onFocus:b,onBlur:c},ne,N),null),[[Bt("intersect"),{handler:u},null,{once:!0}]]);return d(ie,null,[e.prefix&&d("span",{class:"v-text-field__prefix"},[d("span",{class:"v-text-field__prefix__text"},[e.prefix])]),i.default?d("div",{class:te,"data-no-activator":""},[i.default(),ae]):na(ae,{class:te}),e.suffix&&d("span",{class:"v-text-field__suffix"},[d("span",{class:"v-text-field__suffix__text"},[e.suffix])])])}})},details:C?M=>{var A;return d(ie,null,[(A=i.details)==null?void 0:A.call(i,M),y&&d(ie,null,[d("span",null,null),d(di,{active:e.persistentCounter||s.value,value:g.value,max:v.value,disabled:e.disabled},i.counter)])])}:void 0})}),xi({},r,p,m)}}),Fe=e=>(sa("data-v-ab106601"),e=e(),oa(),e),Ai=Fe(()=>G("h1",{class:"margin-bottom"},"Caterdokupillar Help",-1)),_i=Fe(()=>G("img",{src:ma,usemap:"#image-map"},null,-1)),Li={name:"image-map"},Pi=Fe(()=>G("p",{class:"margin-bottom"},"This document is intended to assist you in completing the Caterdokupillar. Start in the top left, and as each 6x6 puzzle is completed, 4 digits will automatically carry over as givens for the next puzzle. Read the rules carefully for each puzzle, as many contain variants.",-1)),Ii=Fe(()=>G("p",null,"Furthermore, if you get stuck on a particular puzzle, don't fret, as that's where this document comes in. It not only contains the rules for each puzzle, but most importantly, it has the digits you need for the next puzzle available for viewing.",-1)),Vi={style:{"text-align":"center"}},Bi=["innerHTML"],Ei=["innerHTML"],Ri=["innerHTML"],$i=["innerHTML"],Mi={__name:"CaterdokupillarPuzzles",setup(e){const a=H(""),n=H(ze.map(()=>[0]));function t(u){return u?u.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"):""}function i(u){if(!u)return"";const r=u.slice(0,2),p=u.slice(2,4);return`${r}<br/>${p}`}function l(u){return u.replaceAll(`
`,"<br/>")}function s(){n.value=n.value.map(u=>u.filter(r=>r!==0))}const o=ze.map((u,r)=>({...u,originalIndex:r})),c=(u,r)=>{const p=t(r),m=new RegExp(`(${p})`,"gi");return u.replace(m,"<mark>$1</mark>")},g=h(()=>{if(!a.value||!a.value.trim())return o.map(r=>({...r,highlightedTitle:r.title,highlightedAuthor:r.author,highlightedRules:l(r.rules),highlightedIndex:`${r.originalIndex+1}.`})).sort((r,p)=>r.originalIndex-p.originalIndex);const u=a.value.toLowerCase().trim();return o.map(r=>{r.title&&r.title.toLowerCase(),r.author&&r.author.toLowerCase(),r.rules&&r.rules.toLowerCase();const p=`${r.originalIndex+1}.`,m=c(r.title||"",u),w=c(r.author||"",u),b=c(l(r.rules),u),P=c(p,u),I=c(p+" "+r.title);return{...r,highlightedTitle:m,highlightedAuthor:w,highlightedRules:b,highlightedIndex:P,highlightIndexAndTitle:I}}).filter(r=>{const p=r.title?r.title.toLowerCase():"",m=r.author?r.author.toLowerCase():"",w=r.rules?r.rules.toLowerCase():"",b=`${r.originalIndex+1}.`,P=`${r.originalIndex+1}. ${r.title}`.toLowerCase();return p.includes(u)||m.includes(u)||w.includes(u)||b.includes(u)||P.includes(u)}).sort((r,p)=>r.originalIndex-p.originalIndex)});function v(){g.value.forEach(u=>{n.value[u.originalIndex].includes(0)||n.value[u.originalIndex].push(0)})}function f(u){const r=ze[u];a.value=`${u+1}. ${r.title}`,n.value={[u]:[0]}}return(u,r)=>(De(),vt(ie,null,[d(We,{theme:"dark",class:"intro"},{default:q(()=>[Ai,_i,G("map",Li,[G("area",{target:"",alt:"The Face of Eternity",title:"The Face of Eternity",onClick:r[0]||(r[0]=p=>f(0)),coords:"95,72,175,141",shape:"rect"}),G("area",{target:"",alt:"Apertif",title:"Apertif",onClick:r[1]||(r[1]=p=>f(1)),coords:"221,187,146,124,365,38",shape:"rect"})]),Pi,Ii,d(Ja,{"max-width":"100%"},{default:q(()=>[d(oi,{justify:"center",wrap:""},{default:q(()=>[d(Ke,{cols:"12",sm:"8",md:"6"},{default:q(()=>[d(Ti,{modelValue:a.value,"onUpdate:modelValue":r[2]||(r[2]=p=>a.value=p),label:"Search puzzles by title, author, rules language or number",class:"mt-4",clearable:""},null,8,["modelValue"])]),_:1}),d(Ke,{cols:"12",md:"3",sm:"2",class:"d-flex justify-center"},{default:q(()=>[d(Ct,{class:"mt-4",onClick:v,size:"x-large"},{default:q(()=>[yt("Open Selected Puzzles' Rules")]),_:1})]),_:1}),d(Ke,{cols:"12",md:"3",sm:"2",class:"d-flex justify-center"},{default:q(()=>[d(Ct,{class:"mt-4",onClick:s,size:"x-large"},{default:q(()=>[yt("Close All Puzzles' Rules")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),d(We,{class:"d-flex flex-wrap bg-surface-variant"},{default:q(()=>[z(g).length>0?(De(!0),vt(ie,{key:0},ia(z(g),(p,m)=>(De(),Rt(We,{class:"ma-2 pa-2",elevation:"5",rounded:"true",width:"400"},{default:q(()=>[G("div",Vi,[G("h3",{innerHTML:`${z(g)[m].highlightedIndex} ${z(g)[m].highlightedTitle}`},null,8,Bi),G("h3",{innerHTML:`by ${z(g)[m].highlightedAuthor}`},null,8,Ei)]),d(Ya,{modelValue:n.value[z(g)[m].originalIndex],"onUpdate:modelValue":w=>n.value[z(g)[m].originalIndex]=w},{default:q(()=>[d(Dt,{title:"Rules"},{default:q(()=>[d(Le,null,{default:q(()=>[G("div",{innerHTML:z(g)[m].highlightedRules},null,8,Ri)]),_:2},1024)]),_:2},1024),d(Dt,{title:"Digits"},{default:q(()=>[d(Le,null,{default:q(()=>[G("div",{innerHTML:i(z(g)[m].digits)},null,8,$i)]),_:2},1024)]),_:2},1024)]),_:2},1032,["modelValue","onUpdate:modelValue"])]),_:2},1024))),256)):la("",!0)]),_:1})],64))}},Fi=fa(Mi,[["__scopeId","data-v-ab106601"]]),zi={__name:"index",setup(e){return(a,n)=>{const t=Fi;return De(),Rt(t)}}};export{zi as default};
